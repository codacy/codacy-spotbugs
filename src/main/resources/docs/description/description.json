[ {
  "patternId" : "ABC_ARRAY_BASED_COLLECTIONS",
  "title" : "Method uses array as basis of collection",
  "description" : "Method {1} uses array as basis of collection",
  "parameters" : [ ]
}, {
  "patternId" : "ACEM_ABSTRACT_CLASS_EMPTY_METHODS",
  "title" : "Empty method could be declared abstract",
  "description" : "Empty method {1} could be declared abstract",
  "parameters" : [ ]
}, {
  "patternId" : "AFBR_ABNORMAL_FINALLY_BLOCK_RETURN",
  "title" : "Method has abnormal exit from finally block",
  "description" : "Method {1} has abnormal exit from finally block",
  "parameters" : [ ]
}, {
  "patternId" : "AIOB_ARRAY_INDEX_OUT_OF_BOUNDS",
  "title" : "Method attempts to access an array element outside the array's size",
  "description" : "Method {1} attempts to access an array element outside the array's size",
  "parameters" : [ ]
}, {
  "patternId" : "AIOB_ARRAY_STORE_TO_NULL_REFERENCE",
  "title" : "Method attempts to store an array element to an array that does not appear to be allocated",
  "description" : "Method {1} attempts to store an array element to an array that does not appear to be allocated",
  "parameters" : [ ]
}, {
  "patternId" : "AI_ANNOTATION_ISSUES_NEEDS_NULLABLE",
  "title" : "Method that can return null, is missing a @Nullable annotation",
  "description" : "Method {1} that can return null, is missing a @Nullable annotation",
  "parameters" : [ ]
}, {
  "patternId" : "AM_CREATES_EMPTY_JAR_FILE_ENTRY",
  "title" : "Creates an empty jar file entry",
  "description" : "Empty jar file entry created in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "AM_CREATES_EMPTY_ZIP_FILE_ENTRY",
  "title" : "Creates an empty zip file entry",
  "description" : "Empty zip file entry created in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_BROADCAST",
  "title" : "Broadcast (Android)",
  "description" : "Broadcast intents could be received by a malicious application",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_EXTERNAL_FILE_ACCESS",
  "title" : "External file access (Android)",
  "description" : "Files could be saved to external storage",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_GEOLOCATION",
  "title" : "WebView with geolocation activated (Android)",
  "description" : "WebView with activated geolocation",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_WEB_VIEW_JAVASCRIPT",
  "title" : "WebView with JavaScript enabled (Android)",
  "description" : "WebView with JavaScript enabled",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_WEB_VIEW_JAVASCRIPT_INTERFACE",
  "title" : "WebView with JavaScript interface (Android)",
  "description" : "WebView with JavaScript interface",
  "parameters" : [ ]
}, {
  "patternId" : "ANDROID_WORLD_WRITABLE",
  "title" : "World writable file (Android)",
  "description" : "The content that is written can be viewed by any application",
  "parameters" : [ ]
}, {
  "patternId" : "AOM_ABSTRACT_OVERRIDDEN_METHOD",
  "title" : "Abstract method overrides a concrete implementation",
  "description" : "Abstract method {1} overrides a concrete implementation",
  "parameters" : [ ]
}, {
  "patternId" : "AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION",
  "title" : "Sequence of calls to concurrent abstraction may not be atomic",
  "description" : "Sequence of calls to {2} may not be atomic in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "AWCBR_ARRAY_WRAPPED_CALL_BY_REFERENCE",
  "title" : "Method uses 1 element array to simulate call by reference",
  "description" : "Method {1} uses 1 element array to simulate call by reference",
  "parameters" : [ ]
}, {
  "patternId" : "AWS_QUERY_INJECTION",
  "title" : "AWS Query Injection",
  "description" : "This SimpleDB client accepts data from an untrusted source.",
  "parameters" : [ ]
}, {
  "patternId" : "BAC_BAD_APPLET_CONSTRUCTOR",
  "title" : "Bad Applet Constructor relies on uninitialized AppletStub",
  "description" : "Bad Applet Constructor relies on uninitialized AppletStub",
  "parameters" : [ ]
}, {
  "patternId" : "BAD_HEXA_CONVERSION",
  "title" : "Bad hexadecimal concatenation",
  "description" : "Leading zeros are omitted in the concatenation increasing collision potential",
  "parameters" : [ ]
}, {
  "patternId" : "BAS_BLOATED_ASSIGNMENT_SCOPE",
  "title" : "Method assigns a variable in a larger scope than is needed",
  "description" : "Method {1} assigns a variable in a larger scope than is needed",
  "parameters" : [ ]
}, {
  "patternId" : "BC_BAD_CAST_TO_ABSTRACT_COLLECTION",
  "title" : "Questionable cast to abstract collection",
  "description" : "Questionable cast from Collection to abstract class {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_BAD_CAST_TO_CONCRETE_COLLECTION",
  "title" : "Questionable cast to concrete collection",
  "description" : "Questionable cast from {2} to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS",
  "title" : "Equals method should not assume anything about the type of its argument",
  "description" : "Equals method for {0} assumes the argument is of type {0.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_IMPOSSIBLE_CAST",
  "title" : "Impossible cast",
  "description" : "Impossible cast from {2} to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY",
  "title" : "Impossible cast involving primitive array",
  "description" : "Impossible cast involving primitive array in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_IMPOSSIBLE_DOWNCAST",
  "title" : "Impossible downcast",
  "description" : "Impossible downcast from {2} to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY",
  "title" : "Impossible downcast of toArray() result",
  "description" : "Impossible downcast of toArray() result to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_IMPOSSIBLE_INSTANCEOF",
  "title" : "instanceof will always return false",
  "description" : "instanceof will always return false in {1}, since a {2} can't be a {3}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_NULL_INSTANCEOF",
  "title" : "A known null value is checked to see if it is an instance of a type",
  "description" : "A known null value is checked to see if it is an instance of {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_UNCONFIRMED_CAST",
  "title" : "Unchecked/unconfirmed cast",
  "description" : "Unchecked/unconfirmed cast from {2} to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
  "title" : "Unchecked/unconfirmed cast of return value from method",
  "description" : "Unchecked/unconfirmed cast from {2} to {3} of return value in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BC_VACUOUS_INSTANCEOF",
  "title" : "instanceof will always return true",
  "description" : "instanceof will always return true for all non-null values in {1}, since all {2} are instances of {3}",
  "parameters" : [ ]
}, {
  "patternId" : "BEAN_PROPERTY_INJECTION",
  "title" : "JavaBeans Property Injection",
  "description" : "JavaBeans property name populated with user controlled parameters",
  "parameters" : [ ]
}, {
  "patternId" : "BED_BOGUS_EXCEPTION_DECLARATION",
  "title" : "Non derivable method declares throwing an exception that isn't thrown",
  "description" : "Non derivable method {1} declares throwing an exception that isn't thrown",
  "parameters" : [ ]
}, {
  "patternId" : "BED_HIERARCHICAL_EXCEPTION_DECLARATION",
  "title" : "Method declares throwing two or more exceptions related by inheritance",
  "description" : "Method {1} declares throwing two or more exceptions related by inheritance",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_ADD_OF_SIGNED_BYTE",
  "title" : "Bitwise add of signed byte value",
  "description" : "Bitwise add of signed byte value computed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_AND",
  "title" : "Incompatible bit masks",
  "description" : "Incompatible bit masks in (e & {2} == {3}) yields a constant result in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_AND_ZZ",
  "title" : "Check to see if ((...) & 0) == 0",
  "description" : "Check to see if ((...) & 0) == 0 in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_IOR",
  "title" : "Incompatible bit masks",
  "description" : "Incompatible bit masks in (e | {2} == {3}) yields constant result in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_IOR_OF_SIGNED_BYTE",
  "title" : "Bitwise OR of signed byte value",
  "description" : "Bitwise OR of signed byte value computed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_SIGNED_CHECK",
  "title" : "Check for sign of bitwise operation",
  "description" : "Check for sign of bitwise operation in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BIT_SIGNED_CHECK_HIGH_BIT",
  "title" : "Check for sign of bitwise operation involving negative number",
  "description" : "Check for sign of bitwise operation involving {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BLOWFISH_KEY_SIZE",
  "title" : "Blowfish usage with short key",
  "description" : "Blowfish usage with a short encryption key",
  "parameters" : [ ]
}, {
  "patternId" : "BL_BURYING_LOGIC",
  "title" : "Method buries logic to the right (indented) more than it needs to be",
  "description" : "Method {1} buries logic to the right (indented) more than it needs to be",
  "parameters" : [ ]
}, {
  "patternId" : "BOA_BADLY_OVERRIDDEN_ADAPTER",
  "title" : "Class overrides a method implemented in super class Adapter wrongly",
  "description" : "Class {0} overrides a method {1} implemented in super class Adapter wrongly",
  "parameters" : [ ]
}, {
  "patternId" : "BRPI_BACKPORT_REUSE_PUBLIC_IDENTIFIERS",
  "title" : "Method uses backported libraries that are now built in",
  "description" : "Method {1} uses backported libraries that are now built in",
  "parameters" : [ ]
}, {
  "patternId" : "BRSA_BAD_RESULTSET_ACCESS",
  "title" : "Method attempts to access a result set field with index 0",
  "description" : "{1} attempts to access a result set field with index 0",
  "parameters" : [ ]
}, {
  "patternId" : "BSB_BLOATED_SYNCHRONIZED_BLOCK",
  "title" : "Method overly synchronizes a block of code",
  "description" : "Method {1} overly synchronizes a block of code",
  "parameters" : [ ]
}, {
  "patternId" : "BSHIFT_WRONG_ADD_PRIORITY",
  "title" : "Possible bad parsing of shift operation",
  "description" : "Possible bad parsing of shift operation in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BX_BOXING_IMMEDIATELY_UNBOXED",
  "title" : "Primitive value is boxed and then immediately unboxed",
  "description" : "Primitive value is boxed and then immediately unboxed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION",
  "title" : "Primitive value is boxed then unboxed to perform primitive coercion",
  "description" : "Primitive value is boxed then unboxed to perform primitive coercion in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR",
  "title" : "Primitive value is unboxed and coerced for ternary operator",
  "description" : "Primitive value is unboxed and coerced for ternary operator in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "BX_UNBOXING_IMMEDIATELY_REBOXED",
  "title" : "Boxed value is unboxed and then immediately reboxed",
  "description" : "Boxed value is unboxed and then immediately reboxed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "CAAL_CONFUSING_ARRAY_AS_LIST",
  "title" : "Method calls Array.asList on an array of primitive values",
  "description" : "Method {1} calls Array.asList on an array of primitive values",
  "parameters" : [ ]
}, {
  "patternId" : "CAA_COVARIANT_ARRAY_ELEMENT_STORE",
  "title" : "Possibly incompatible element is stored in covariant array",
  "description" : "Value of type {2} is stored into array which element type is {3}",
  "parameters" : [ ]
}, {
  "patternId" : "CAA_COVARIANT_ARRAY_FIELD",
  "title" : "Covariant array assignment to a field",
  "description" : "Array of type {2} is assigned to the field of type {3}",
  "parameters" : [ ]
}, {
  "patternId" : "CAA_COVARIANT_ARRAY_LOCAL",
  "title" : "Covariant array assignment to a local variable",
  "description" : "Array of type {2} is assigned to the variable of type {3}",
  "parameters" : [ ]
}, {
  "patternId" : "CAA_COVARIANT_ARRAY_RETURN",
  "title" : "Covariant array is returned from the method",
  "description" : "Array of type {2} is returned from the method which return type is {3}",
  "parameters" : [ ]
}, {
  "patternId" : "CAO_CONFUSING_AUTOBOXED_OVERLOADING",
  "title" : "Class defines methods which confuse Character with int parameters",
  "description" : "Class {0} defines methods which confuse Character with int parameters",
  "parameters" : [ ]
}, {
  "patternId" : "CBC_CONTAINS_BASED_CONDITIONAL",
  "title" : "This method uses an excessively complex conditional that can be replaced with Set.contains",
  "description" : "This method {1} uses an excessively complex conditional that can be replaced with Set.contains",
  "parameters" : [ ]
}, {
  "patternId" : "CBX_CUSTOM_BUILT_XML",
  "title" : "Method builds XML strings through ad hoc concatenation",
  "description" : "Method {1} builds XML strings through ad hoc concatenation",
  "parameters" : [ ]
}, {
  "patternId" : "CCI_CONCURRENT_COLLECTION_ISSUES_USE_PUT_IS_RACY",
  "title" : "Method gets and sets a value of a ConcurrentHashMap in a racy manner",
  "description" : "Method {1} gets and sets a value of a ConcurrentHashMap in a racy manner ",
  "parameters" : [ ]
}, {
  "patternId" : "CCNE_COMPARE_CLASS_EQUALS_NAME",
  "title" : "Method compares class name instead of comparing class",
  "description" : "Method {1} compares class name instead of comparing the class",
  "parameters" : [ ]
}, {
  "patternId" : "CC_CYCLOMATIC_COMPLEXITY",
  "title" : "Method is excessively complex",
  "description" : "Method {1} is excessively complex, with a cyclomatic complexity of {3}",
  "parameters" : [ ]
}, {
  "patternId" : "CD_CIRCULAR_DEPENDENCY",
  "title" : "Test for circular dependencies among classes",
  "description" : "Class {0} has a circular dependency with other classes",
  "parameters" : [ ]
}, {
  "patternId" : "CEBE_COMMONS_EQUALS_BUILDER_ISEQUALS",
  "title" : "Method returns the result of invoking equals() on EqualsBuilder",
  "description" : "Method {1} returns the result of invoking equals() in EqualsBuilder",
  "parameters" : [ ]
}, {
  "patternId" : "CE_CLASS_ENVY",
  "title" : "Method excessively uses methods of another class",
  "description" : "Method {1} excessively uses methods of another class",
  "parameters" : [ ]
}, {
  "patternId" : "CFS_CONFUSING_FUNCTION_SEMANTICS",
  "title" : "Method returns modified parameter",
  "description" : "Method {1} returns modified parameter",
  "parameters" : [ ]
}, {
  "patternId" : "CHTH_COMMONS_HASHCODE_BUILDER_TOHASHCODE",
  "title" : "Method returns the result of invoking hashCode() on HashCodeBuilder",
  "description" : "Method {1} returns the result of invoking hashCode() in HashCodeBuilder",
  "parameters" : [ ]
}, {
  "patternId" : "CIPHER_INTEGRITY",
  "title" : "Cipher with no integrity",
  "description" : "The cipher does not provide data integrity",
  "parameters" : [ ]
}, {
  "patternId" : "CI_CONFUSED_INHERITANCE",
  "title" : "Class is final but declares protected field",
  "description" : "Class {0} is final but declares protected field {1}",
  "parameters" : [ ]
}, {
  "patternId" : "CLI_CONSTANT_LIST_INDEX",
  "title" : "Method accesses list or array with constant index",
  "description" : "Method {1} accesses list or array with constant index",
  "parameters" : [ ]
}, {
  "patternId" : "CNC_COLLECTION_NAMING_CONFUSION",
  "title" : "Collection variable is named with a different type of collection in the name",
  "description" : "Collection variable {1} is named with a different type of collection in the name",
  "parameters" : [ ]
}, {
  "patternId" : "CNT_ROUGH_CONSTANT_VALUE",
  "title" : "Rough value of known constant found",
  "description" : "Rough value of {3} found: {2}",
  "parameters" : [ ]
}, {
  "patternId" : "CN_IDIOM",
  "title" : "Class implements Cloneable but does not define or use clone method",
  "description" : "Class {0} implements Cloneable but does not define or use clone method",
  "parameters" : [ ]
}, {
  "patternId" : "CN_IDIOM_NO_SUPER_CALL",
  "title" : "clone method does not call super.clone()",
  "description" : "{1} does not call super.clone()",
  "parameters" : [ ]
}, {
  "patternId" : "CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE",
  "title" : "Class defines clone() but doesn't implement Cloneable",
  "description" : "{0} defines clone() but doesn't implement Cloneable",
  "parameters" : [ ]
}, {
  "patternId" : "COMMAND_INJECTION",
  "title" : "Potential Command Injection",
  "description" : "This usage of {3} can be vulnerable to Command Injection",
  "parameters" : [ ]
}, {
  "patternId" : "COM_COPIED_OVERRIDDEN_METHOD",
  "title" : "Method is implemented with an exact copy of its superclass' method",
  "description" : "Method {1} is implemented with an exact copy of its superclass' method",
  "parameters" : [ ]
}, {
  "patternId" : "COM_PARENT_DELEGATED_CALL",
  "title" : "Method merely delegates to its superclass's version",
  "description" : "Method {1} merely delegates to its superclass's version",
  "parameters" : [ ]
}, {
  "patternId" : "COOKIE_PERSISTENT",
  "title" : "Persistent Cookie Usage",
  "description" : "Cookie Set To Expire In 1 Year Or More",
  "parameters" : [ ]
}, {
  "patternId" : "COOKIE_USAGE",
  "title" : "Potentially sensitive data in a cookie",
  "description" : "Sensitive data may be stored by the application in a cookie",
  "parameters" : [ ]
}, {
  "patternId" : "CO_ABSTRACT_SELF",
  "title" : "Abstract class defines covariant compareTo() method",
  "description" : "Abstract {0} defines compareTo({0.givenClass}) method",
  "parameters" : [ ]
}, {
  "patternId" : "CO_COMPARETO_INCORRECT_FLOATING",
  "title" : "compareTo()/compare() incorrectly handles float or double value",
  "description" : "{1} incorrectly handles {2} value",
  "parameters" : [ ]
}, {
  "patternId" : "CO_COMPARETO_RESULTS_MIN_VALUE",
  "title" : "compareTo()/compare() returns Integer.MIN_VALUE",
  "description" : "{1} returns Integer.MIN_VALUE, which can't be negated",
  "parameters" : [ ]
}, {
  "patternId" : "CO_SELF_NO_OBJECT",
  "title" : "Covariant compareTo() method defined",
  "description" : "{0} defines compareTo({0.givenClass}) method but not compareTo(Object)",
  "parameters" : [ ]
}, {
  "patternId" : "CRF_CONFLATING_RESOURCES_AND_FILES",
  "title" : "This method accesses URL resources using the File API",
  "description" : "This method {1} accesses URL resources using the File API",
  "parameters" : [ ]
}, {
  "patternId" : "CRLF_INJECTION_LOGS",
  "title" : "Potential CRLF Injection for logs",
  "description" : "This use of {3} might be used to include CRLF characters into log messages",
  "parameters" : [ ]
}, {
  "patternId" : "CSBTS_COMMONS_STRING_BUILDER_TOSTRING",
  "title" : "Method returns the result of invoking toString() without intermediate invocation of append() in ToStringBuilder",
  "description" : "Method {1} returns the result of invoking toString() without intermediate invocation of append() in ToStringBuilder",
  "parameters" : [ ]
}, {
  "patternId" : "CSI_CHAR_SET_ISSUES_UNKNOWN_ENCODING",
  "title" : "This method uses an unknown character encoding literal",
  "description" : "This method {3} uses an unknown character encoding literal \"{4}\"",
  "parameters" : [ ]
}, {
  "patternId" : "CSI_CHAR_SET_ISSUES_USE_STANDARD_CHARSET",
  "title" : "This method needlessly uses a String literal as a Charset encoding",
  "description" : "This method \"{3}\" needlessly uses a String literal to define an encoding.  A built-in Charset could be used instead like: {4}",
  "parameters" : [ ]
}, {
  "patternId" : "CSI_CHAR_SET_ISSUES_USE_STANDARD_CHARSET_NAME",
  "title" : "This method should use a StandardCharsets.XXX.name() to specify an encoding",
  "description" : "This method {3} should use a StandardCharsets.XXX.name() to specify an encoding",
  "parameters" : [ ]
}, {
  "patternId" : "CTU_CONFLICTING_TIME_UNITS",
  "title" : "This method performs arithmetic operations on time values with different units",
  "description" : "This method {1} performs arithmetic operations on time values with different units",
  "parameters" : [ ]
}, {
  "patternId" : "CUSTOM_INJECTION",
  "title" : "Potential injection (custom)",
  "description" : "This use of {3} can be vulnerable to injection",
  "parameters" : [ ]
}, {
  "patternId" : "CUSTOM_MESSAGE_DIGEST",
  "title" : "Message digest is custom",
  "description" : "{0} is a custom cryptographic hash function implementation",
  "parameters" : [ ]
}, {
  "patternId" : "CU_CLONE_USABILITY_MISMATCHED_RETURN",
  "title" : "Clone method declares it returns a type different than the owning class",
  "description" : "Clone method {1} declares it returns a type different than the owning class",
  "parameters" : [ ]
}, {
  "patternId" : "CU_CLONE_USABILITY_OBJECT_RETURN",
  "title" : "Clone method declares it returns an Object",
  "description" : "Clone method {1} declares it returns an Object",
  "parameters" : [ ]
}, {
  "patternId" : "CU_CLONE_USABILITY_THROWS",
  "title" : "Clone method declares it throws CloneNotSupportedException",
  "description" : "Clone method {1} declares it throws CloneNotSupportedException",
  "parameters" : [ ]
}, {
  "patternId" : "CVAA_CONTRAVARIANT_ARRAY_ASSIGNMENT",
  "title" : "Method performs a contravariant array assignment",
  "description" : "Method {1} performs a contravariant array assignment",
  "parameters" : [ ]
}, {
  "patternId" : "CVAA_CONTRAVARIANT_ELEMENT_ASSIGNMENT",
  "title" : "Method performs a contravariant array element assignment",
  "description" : "Method {1} performs a contravariant array element assignment",
  "parameters" : [ ]
}, {
  "patternId" : "DB_DUPLICATE_BRANCHES",
  "title" : "Method uses the same code for two branches",
  "description" : "{1} uses the same code for two branches",
  "parameters" : [ ]
}, {
  "patternId" : "DB_DUPLICATE_SWITCH_CLAUSES",
  "title" : "Method uses the same code for two switch clauses",
  "description" : "{1} uses the same code for two switch clauses",
  "parameters" : [ ]
}, {
  "patternId" : "DC_DOUBLECHECK",
  "title" : "Possible double check of field",
  "description" : "Possible doublecheck on {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DC_PARTIALLY_CONSTRUCTED",
  "title" : "Possible exposure of partially initialized object",
  "description" : "Possible exposure of partially initialized object in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DDC_DOUBLE_DATE_COMPARISON",
  "title" : "Method uses two date comparisons when one would do",
  "description" : "Method {1} uses two date comparisons when one would do",
  "parameters" : [ ]
}, {
  "patternId" : "DEFAULT_HTTP_CLIENT",
  "title" : "DefaultHttpClient with default constructor is not compatible with TLS 1.2",
  "description" : "DefaultHttpClient with default constructor is not compatible with TLS 1.2",
  "parameters" : [ ]
}, {
  "patternId" : "DESERIALIZATION_GADGET",
  "title" : "This class could be used as deserialization gadget",
  "description" : "This class could make application using serialization vulnerable",
  "parameters" : [ ]
}, {
  "patternId" : "DES_USAGE",
  "title" : "DES is insecure",
  "description" : "DES should be replaced with AES",
  "parameters" : [ ]
}, {
  "patternId" : "DE_MIGHT_DROP",
  "title" : "Method might drop exception",
  "description" : "{1} might drop {2}",
  "parameters" : [ ]
}, {
  "patternId" : "DE_MIGHT_IGNORE",
  "title" : "Method might ignore exception",
  "description" : "{1} might ignore {2}",
  "parameters" : [ ]
}, {
  "patternId" : "DLC_DUBIOUS_LIST_COLLECTION",
  "title" : "Class defines List based fields but uses them like Sets",
  "description" : "Class {0} defines List based fields but uses them like Sets",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_LOCAL_INCREMENT_IN_RETURN",
  "title" : "Useless increment in return statement",
  "description" : "Useless increment in return from {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_LOCAL_STORE",
  "title" : "Dead store to local variable",
  "description" : "Dead store to {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_LOCAL_STORE_IN_RETURN",
  "title" : "Useless assignment in return statement",
  "description" : "Useless assignment in return from {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_LOCAL_STORE_OF_NULL",
  "title" : "Dead store of null to local variable",
  "description" : "Dead store of null to {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD",
  "title" : "Dead store to local variable that shadows field",
  "description" : "Dead store to {2} rather than field with same name in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_DEAD_STORE_OF_CLASS_LITERAL",
  "title" : "Dead store of class literal",
  "description" : "Dead store of {3}.class in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DLS_OVERWRITTEN_INCREMENT",
  "title" : "Overwritten increment",
  "description" : "Overwritten increment in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DL_SYNCHRONIZATION_ON_BOOLEAN",
  "title" : "Synchronization on Boolean",
  "description" : "Synchronization on Boolean in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE",
  "title" : "Synchronization on boxed primitive",
  "description" : "Synchronization on {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DL_SYNCHRONIZATION_ON_SHARED_CONSTANT",
  "title" : "Synchronization on interned String",
  "description" : "Synchronization on interned String in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE",
  "title" : "Synchronization on boxed primitive values",
  "description" : "Synchronization on {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMC_DUBIOUS_MAP_COLLECTION",
  "title" : "Class holds a map-type field, but uses it as only a List",
  "description" : "Class {0} holds a map-type field {1}, but uses it as only a List",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION",
  "title" : "Can't use reflection to check for presence of annotation without runtime retention",
  "description" : "Use of reflection to check for the presence the annotation {3} which doesn't have runtime retention, in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_ARGUMENTS_WRONG_ORDER",
  "title" : "Reversed method arguments",
  "description" : "Arguments in wrong order for invocation of {2.name} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_BAD_MONTH",
  "title" : "Bad constant value for month",
  "description" : "Bad month value of {2} passed to {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE",
  "title" : "BigDecimal constructed from double that isn't represented precisely",
  "description" : "BigDecimal constructed from {4} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_BLOCKING_METHODS_ON_URL",
  "title" : "The equals and hashCode methods of URL are blocking",
  "description" : "Invocation of {2}, which blocks to do domain name resolution, in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_CALLING_NEXT_FROM_HASNEXT",
  "title" : "hasNext method invokes next",
  "description" : "{1} invokes {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES",
  "title" : "Collections should not contain themselves",
  "description" : "Collections should not contain themselves in call to {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_COLLECTION_OF_URLS",
  "title" : "Maps and sets of URLs can be performance hogs",
  "description" : "{1} is or uses a map or set of URLs, which can be a performance hog",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_CONSTANT_DB_PASSWORD",
  "title" : "Hardcoded constant database password",
  "description" : "Hardcoded constant database password in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_DOH",
  "title" : "D'oh! A nonsensical method invocation",
  "description" : "D'oh! A nonsensical invocation of {2.nameAndSignature} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_EMPTY_DB_PASSWORD",
  "title" : "Empty database password",
  "description" : "Empty database password in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS",
  "title" : "Adding elements of an entry set may fail due to reuse of Entry objects",
  "description" : "Adding elements of an entry set may fail due to reuse of {2.simpleClass}.Entry object in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR",
  "title" : "Futile attempt to change max pool size of ScheduledThreadPoolExecutor",
  "description" : "Futile attempt to change max pool size of ScheduledThreadPoolExecutor in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_HARDCODED_ABSOLUTE_FILENAME",
  "title" : "Code contains a hard coded reference to an absolute pathname",
  "description" : "Hard coded reference to an absolute pathname in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_INVOKING_HASHCODE_ON_ARRAY",
  "title" : "Invocation of hashCode on an array",
  "description" : "Invocation of hashCode on array in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY",
  "title" : "Invocation of toString on an unnamed array",
  "description" : "Invocation of toString on an unnamed array in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_INVOKING_TOSTRING_ON_ARRAY",
  "title" : "Invocation of toString on an array",
  "description" : "Invocation of toString on {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT",
  "title" : "Double.longBitsToDouble invoked on an int",
  "description" : "Double.longBitsToDouble invoked on an int in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_NONSERIALIZABLE_OBJECT_WRITTEN",
  "title" : "Non serializable object written to ObjectOutput",
  "description" : "Non serializable {2} written to ObjectOutput in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_RANDOM_USED_ONLY_ONCE",
  "title" : "Random object created and used only once",
  "description" : "Random object created and used only once in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS",
  "title" : "Creation of ScheduledThreadPoolExecutor with zero core threads",
  "description" : "Creation of ScheduledThreadPoolExecutor with zero core threads in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED",
  "title" : "Thread passed where Runnable expected",
  "description" : "Thread passed where Runnable expected in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_UNSUPPORTED_METHOD",
  "title" : "Call to unsupported method",
  "description" : "Call to unsupported method {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_USELESS_SUBSTRING",
  "title" : "Invocation of substring(0), which returns the original value",
  "description" : "{1} invokes substring(0), which returns the original value",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION",
  "title" : "Don't use removeAll to clear a collection",
  "description" : "removeAll used to clear a collection in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD",
  "title" : "Useless/vacuous call to EasyMock method",
  "description" : "Useless/vacuous call to {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DMI_VACUOUS_SELF_COLLECTION_CALL",
  "title" : "Vacuous call to collections",
  "description" : "For any collection c, calling c.{2.name}(c) doesn't make sense",
  "parameters" : [ ]
}, {
  "patternId" : "DM_BOOLEAN_CTOR",
  "title" : "Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
  "description" : "{1} invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
  "parameters" : [ ]
}, {
  "patternId" : "DM_BOXED_PRIMITIVE_FOR_COMPARE",
  "title" : "Boxing a primitive to compare",
  "description" : "Primitive is boxed to call {2}: use {3} instead",
  "parameters" : [ ]
}, {
  "patternId" : "DM_BOXED_PRIMITIVE_FOR_PARSING",
  "title" : "Boxing/unboxing to parse a primitive",
  "description" : "Boxing/unboxing to parse a primitive {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_BOXED_PRIMITIVE_TOSTRING",
  "title" : "Method allocates a boxed primitive just to call toString",
  "description" : "Primitive boxed just to call toString in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_CONVERT_CASE",
  "title" : "Consider using Locale parameterized version of invoked method",
  "description" : "Use of non-localized String.toUpperCase() or String.toLowerCase() in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_DEFAULT_ENCODING",
  "title" : "Reliance on default encoding",
  "description" : "Found reliance on default encoding in {1}: {2}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_EXIT",
  "title" : "Method invokes System.exit(...)",
  "description" : "{1} invokes System.exit(...), which shuts down the entire virtual machine",
  "parameters" : [ ]
}, {
  "patternId" : "DM_FP_NUMBER_CTOR",
  "title" : "Method invokes inefficient floating-point Number constructor; use static valueOf instead",
  "description" : "{1} invokes inefficient {2} constructor; use {3} instead",
  "parameters" : [ ]
}, {
  "patternId" : "DM_GC",
  "title" : "Explicit garbage collection; extremely dubious except in benchmarking code",
  "description" : "{1} forces garbage collection; extremely dubious except in benchmarking code",
  "parameters" : [ ]
}, {
  "patternId" : "DM_INVALID_MIN_MAX",
  "title" : "Incorrect combination of Math.max and Math.min",
  "description" : "Incorrect combination of Math.max and Math.min: this code always returns {2}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_MONITOR_WAIT_ON_CONDITION",
  "title" : "Monitor wait() called on Condition",
  "description" : "Monitor wait() called on a Condition in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DM_NEW_FOR_GETCLASS",
  "title" : "Method allocates an object, only to get the class object",
  "description" : "{1} allocates an object, only to get the class object",
  "parameters" : [ ]
}, {
  "patternId" : "DM_NEXTINT_VIA_NEXTDOUBLE",
  "title" : "Use the nextInt method of Random rather than nextDouble to generate a random integer",
  "description" : "{1} uses the nextDouble method of Random to generate a random integer; using nextInt is more efficient",
  "parameters" : [ ]
}, {
  "patternId" : "DM_NUMBER_CTOR",
  "title" : "Method invokes inefficient Number constructor; use static valueOf instead",
  "description" : "{1} invokes inefficient {2} constructor; use {3} instead",
  "parameters" : [ ]
}, {
  "patternId" : "DM_RUN_FINALIZERS_ON_EXIT",
  "title" : "Method invokes dangerous method runFinalizersOnExit",
  "description" : "{1} invokes dangerous method runFinalizersOnExit",
  "parameters" : [ ]
}, {
  "patternId" : "DM_STRING_CTOR",
  "title" : "Method invokes inefficient new String(String) constructor",
  "description" : "{1} invokes inefficient new String(String) constructor",
  "parameters" : [ ]
}, {
  "patternId" : "DM_STRING_TOSTRING",
  "title" : "Method invokes toString() method on a String",
  "description" : "{1} invokes toString() method on a String",
  "parameters" : [ ]
}, {
  "patternId" : "DM_STRING_VOID_CTOR",
  "title" : "Method invokes inefficient new String() constructor",
  "description" : "{1} invokes inefficient new String() constructor",
  "parameters" : [ ]
}, {
  "patternId" : "DM_USELESS_THREAD",
  "title" : "A thread was created using the default empty run method",
  "description" : "{1} creates a thread using the default empty run method",
  "parameters" : [ ]
}, {
  "patternId" : "DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED",
  "title" : "Classloaders should only be created inside doPrivileged block",
  "description" : "{1} creates a {2} classloader, which should be performed within a doPrivileged block",
  "parameters" : [ ]
}, {
  "patternId" : "DP_DO_INSIDE_DO_PRIVILEGED",
  "title" : "Method invoked that should be only be invoked inside a doPrivileged block",
  "description" : "Invocation of {2}, which should be invoked from within a doPrivileged block, in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "DRE_DECLARED_RUNTIME_EXCEPTION",
  "title" : "Method declares RuntimeException in throws clause",
  "description" : "Method {1} declares RuntimeException in throws clause",
  "parameters" : [ ]
}, {
  "patternId" : "DSOC_DUBIOUS_SET_OF_COLLECTIONS",
  "title" : "Method uses a set of collections",
  "description" : "Method {1} uses a set of collections",
  "parameters" : [ ]
}, {
  "patternId" : "DTEP_DEPRECATED_TYPESAFE_ENUM_PATTERN",
  "title" : "Class appears to implement the old style type safe enum pattern",
  "description" : "Class {0} appears to implement the old style type safe enum pattern",
  "parameters" : [ ]
}, {
  "patternId" : "DWI_DELETING_WHILE_ITERATING",
  "title" : "Method deletes collection element while iterating",
  "description" : "Method {1} deletes collection element while iterating",
  "parameters" : [ ]
}, {
  "patternId" : "DWI_MODIFYING_WHILE_ITERATING",
  "title" : "Method modifies collection element while iterating",
  "description" : "Method {1} modifies collection element while iterating",
  "parameters" : [ ]
}, {
  "patternId" : "ECB_MODE",
  "title" : "ECB mode is insecure",
  "description" : "The cipher uses ECB mode, which provides poor confidentiality for encrypted data",
  "parameters" : [ ]
}, {
  "patternId" : "EC_ARRAY_AND_NONARRAY",
  "title" : "equals() used to compare array and nonarray",
  "description" : "Calling {3.simpleClass}.equals({2.simpleClass}) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_BAD_ARRAY_COMPARE",
  "title" : "Invocation of equals() on an array, which is equivalent to ==",
  "description" : "Using .equals to compare two {2.simpleClass}'s, (equivalent to ==) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_INCOMPATIBLE_ARRAY_COMPARE",
  "title" : "equals(...) used to compare incompatible arrays",
  "description" : "Using equals to compare a {2.simpleClass} and a {3.simpleClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_NULL_ARG",
  "title" : "Call to equals(null)",
  "description" : "Call to equals(null) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_UNRELATED_CLASS_AND_INTERFACE",
  "title" : "Call to equals() comparing unrelated class and interface",
  "description" : "Call to {3.simpleClass}.equals({2.simpleClass}) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_UNRELATED_INTERFACES",
  "title" : "Call to equals() comparing different interface types",
  "description" : "Call to {3.simpleClass}.equals({2.simpleClass}) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_UNRELATED_TYPES",
  "title" : "Call to equals() comparing different types",
  "description" : "Call to {3.simpleClass}.equals({2.simpleClass}) in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EC_UNRELATED_TYPES_USING_POINTER_EQUALITY",
  "title" : "Using pointer equality to compare different types",
  "description" : "Using pointer equality to compare a {2.givenClass} with a {3.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EI_EXPOSE_REP",
  "title" : "May expose internal representation by returning reference to mutable object",
  "description" : "{1} may expose internal representation by returning {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "EI_EXPOSE_REP2",
  "title" : "May expose internal representation by incorporating reference to mutable object",
  "description" : "{1} may expose internal representation by storing an externally mutable object into {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "EI_EXPOSE_STATIC_REP2",
  "title" : "May expose internal static state by storing a mutable object into a static field",
  "description" : "{1} may expose internal static state by storing a mutable object into a static field {2}",
  "parameters" : [ ]
}, {
  "patternId" : "EL_INJECTION",
  "title" : "Potential code injection when using Expression Language (EL)",
  "description" : "This use of {3} could be vulnerable to code injection (Expression Language)",
  "parameters" : [ ]
}, {
  "patternId" : "ENTITY_LEAK",
  "title" : "Unexpected property leak",
  "description" : "Unexpected property could be leaked because a persistence class is directly exposed to the client",
  "parameters" : [ ]
}, {
  "patternId" : "ENTITY_MASS_ASSIGNMENT",
  "title" : "Mass assignment",
  "description" : "The persistent objects could be exploited by attacker to read sensitive information.",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_ABSTRACT_SELF",
  "title" : "Abstract class defines covariant equals() method",
  "description" : "Abstract {0} defines equals({0.givenClass}) method",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_ALWAYS_FALSE",
  "title" : "equals method always returns false",
  "description" : "{1} always returns false",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_ALWAYS_TRUE",
  "title" : "equals method always returns true",
  "description" : "{1} always returns true",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS",
  "title" : "Equals checks for incompatible operand",
  "description" : "{1} checks for operand being a {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_COMPARETO_USE_OBJECT_EQUALS",
  "title" : "Class defines compareTo(...) and uses Object.equals()",
  "description" : "{0} defines {1.givenClass} and uses Object.equals()",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_COMPARING_CLASS_NAMES",
  "title" : "equals method compares class names rather than class objects",
  "description" : "{1} compares class names rather than class objects",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_DOESNT_OVERRIDE_EQUALS",
  "title" : "Class doesn't override equals in superclass",
  "description" : "{0} doesn't override {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_DONT_DEFINE_EQUALS_FOR_ENUM",
  "title" : "Covariant equals() method defined for enum",
  "description" : "Enum {0} defines equals({0.givenClass})",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_GETCLASS_AND_CLASS_CONSTANT",
  "title" : "equals method fails for subtypes",
  "description" : "{1} fails for subtypes",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_OTHER_NO_OBJECT",
  "title" : "equals() method defined that doesn't override equals(Object)",
  "description" : "{0} defines {1.givenClass} method that doesn't override equals(Object)",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_OTHER_USE_OBJECT",
  "title" : "equals() method defined that doesn't override Object.equals(Object)",
  "description" : "{0} defines {1.givenClass} method and uses Object.equals(Object)",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC",
  "title" : "equals method overrides equals in superclass and may not be symmetric",
  "description" : "{1.class} overrides equals in {2.class.givenClass} and may not be symmetric",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_SELF_NO_OBJECT",
  "title" : "Covariant equals() method defined",
  "description" : "{0} defines equals({0.givenClass}) method but not equals(Object)",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_SELF_USE_OBJECT",
  "title" : "Covariant equals() method defined, Object.equals(Object) inherited",
  "description" : "{0} defines equals({0.givenClass}) method and uses Object.equals(Object)",
  "parameters" : [ ]
}, {
  "patternId" : "EQ_UNUSUAL",
  "title" : "Unusual equals method",
  "description" : "{1} is unusual",
  "parameters" : [ ]
}, {
  "patternId" : "ESAPI_ENCRYPTOR",
  "title" : "Use of ESAPI Encryptor",
  "description" : "The ESAPI encryptor API is used to encrypt data",
  "parameters" : [ ]
}, {
  "patternId" : "ES_COMPARING_PARAMETER_STRING_WITH_EQ",
  "title" : "Comparison of String parameter using == or !=",
  "description" : "Comparison of String parameter using == or != in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ES_COMPARING_STRINGS_WITH_EQ",
  "title" : "Comparison of String objects using == or !=",
  "description" : "Comparison of String objects using == or != in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ESync_EMPTY_SYNC",
  "title" : "Empty synchronized block",
  "description" : "Empty synchronized block in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "EXS_EXCEPTION_SOFTENING_HAS_CHECKED",
  "title" : "Constrained method converts checked exception to unchecked instead of another allowable checked exception",
  "description" : "Constrained method {1} converts checked exception to unchecked instead of another allowable checked exception",
  "parameters" : [ ]
}, {
  "patternId" : "EXS_EXCEPTION_SOFTENING_NO_CHECKED",
  "title" : "Constrained method converts checked exception to unchecked",
  "description" : "Constrained method {1} converts checked exception to unchecked",
  "parameters" : [ ]
}, {
  "patternId" : "EXS_EXCEPTION_SOFTENING_NO_CONSTRAINTS",
  "title" : "Unconstrained method converts checked exception to unchecked",
  "description" : "Unconstrained method {1} converts checked exception to unchecked",
  "parameters" : [ ]
}, {
  "patternId" : "EXS_EXCEPTION_SOFTENING_RETURN_FALSE",
  "title" : "method converts an exception into a boolean 'error code' value",
  "description" : "method {1} converts an exception into a boolean 'error code' value",
  "parameters" : [ ]
}, {
  "patternId" : "EXTERNAL_CONFIG_CONTROL",
  "title" : "Potential external control of configuration",
  "description" : "This use of {3} might be used to control configuration externally",
  "parameters" : [ ]
}, {
  "patternId" : "FB_MISSING_EXPECTED_WARNING",
  "title" : "Missing expected or desired warning from SpotBugs",
  "description" : "Missing expected or desired {2} SpotBugs warning in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "FB_UNEXPECTED_WARNING",
  "title" : "Unexpected/undesired warning from SpotBugs",
  "description" : "Unexpected/undesired {2} SpotBugs warning in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "FCBL_FIELD_COULD_BE_LOCAL",
  "title" : "Class defines fields that are used only as locals",
  "description" : "Class {0} defines fields that are used only as locals",
  "parameters" : [ ]
}, {
  "patternId" : "FCCD_FIND_CLASS_CIRCULAR_DEPENDENCY",
  "title" : "Class has a circular dependency with other classes",
  "description" : "Class {0} has a circular dependency with other classes",
  "parameters" : [ ]
}, {
  "patternId" : "FE_FLOATING_POINT_EQUALITY",
  "title" : "Test for floating point equality",
  "description" : "Test for floating point equality in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER",
  "title" : "Doomed test for equality to NaN",
  "description" : "Doomed test for equality to NaN in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "FII_AVOID_CONTAINS_ON_COLLECTED_STREAM",
  "title" : "Method calls contains() on a collected lambda expression",
  "description" : "Method {1} calls contains() on a collected lambda expresssion",
  "parameters" : [ ]
}, {
  "patternId" : "FII_AVOID_SIZE_ON_COLLECTED_STREAM",
  "title" : "Method calls size() on a collected lambda expression",
  "description" : "Method {1} calls size() on a collected lambda expresssion",
  "parameters" : [ ]
}, {
  "patternId" : "FII_COMBINE_FILTERS",
  "title" : "Method implements a stream using back to back filters",
  "description" : "Method {1} implements a stream using back to back filters",
  "parameters" : [ ]
}, {
  "patternId" : "FII_USE_ANY_MATCH",
  "title" : "Method suboptimally finds any match in a stream",
  "description" : "Method {1} suboptimally finds any match in a stream",
  "parameters" : [ ]
}, {
  "patternId" : "FII_USE_FIND_FIRST",
  "title" : "Method collects a List from a stream() just to get the first element",
  "description" : "Method {1} collects a List from a stream() just to get the first element",
  "parameters" : [ ]
}, {
  "patternId" : "FII_USE_FUNCTION_IDENTITY",
  "title" : "Method declares an identity lambda function rather than using Function.identity()",
  "description" : "Method {1} declares an identity lambda function rather than using Function.identity()",
  "parameters" : [ ]
}, {
  "patternId" : "FII_USE_METHOD_REFERENCE",
  "title" : "Method creates an anonymous lambda expression instead of specifying a method reference",
  "description" : "Method {1} creates an anonymous lamda expression instead of specifying a method reference",
  "parameters" : [ ]
}, {
  "patternId" : "FILE_UPLOAD_FILENAME",
  "title" : "Tainted filename read",
  "description" : "The filename read can be tampered with by the client",
  "parameters" : [ ]
}, {
  "patternId" : "FI_EMPTY",
  "title" : "Empty finalizer should be deleted",
  "description" : "{1} is empty and should be deleted",
  "parameters" : [ ]
}, {
  "patternId" : "FI_EXPLICIT_INVOCATION",
  "title" : "Explicit invocation of finalizer",
  "description" : "Explicit invocation of {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "FI_FINALIZER_NULLS_FIELDS",
  "title" : "Finalizer nulls fields",
  "description" : "{3} is set to null inside finalize method in {1.class}",
  "parameters" : [ ]
}, {
  "patternId" : "FI_FINALIZER_ONLY_NULLS_FIELDS",
  "title" : "Finalizer only nulls fields",
  "description" : "{1} only nulls fields",
  "parameters" : [ ]
}, {
  "patternId" : "FI_MISSING_SUPER_CALL",
  "title" : "Finalizer does not call superclass finalizer",
  "description" : "{1} missing call to super.finalize(), so {2}.finalize() doesn't get called",
  "parameters" : [ ]
}, {
  "patternId" : "FI_NULLIFY_SUPER",
  "title" : "Finalizer nullifies superclass finalizer",
  "description" : "{1} is nullifying {2}.finalize(); is this intended?",
  "parameters" : [ ]
}, {
  "patternId" : "FI_PUBLIC_SHOULD_BE_PROTECTED",
  "title" : "Finalizer should be protected, not public",
  "description" : "{1} is public; should be protected",
  "parameters" : [ ]
}, {
  "patternId" : "FI_USELESS",
  "title" : "Finalizer does nothing but call superclass finalizer",
  "description" : "{1} does nothing except call super.finalize(); delete it",
  "parameters" : [ ]
}, {
  "patternId" : "FL_MATH_USING_FLOAT_PRECISION",
  "title" : "Method performs math using floating point precision",
  "description" : "{1} performs math using floating point precision",
  "parameters" : [ ]
}, {
  "patternId" : "FORMAT_STRING_MANIPULATION",
  "title" : "Format String Manipulation",
  "description" : "Format string argument allowing user controlled parameters",
  "parameters" : [ ]
}, {
  "patternId" : "FPL_FLOATING_POINT_LOOPS",
  "title" : "Method uses floating point indexed loops",
  "description" : "Method {1} uses floating point indexed loops",
  "parameters" : [ ]
}, {
  "patternId" : "FP_FINAL_PARAMETERS",
  "title" : "Method does not define a parameter as final, but could",
  "description" : "Method {1} does not define one or more parameters as final, but could",
  "parameters" : [ ]
}, {
  "patternId" : "GC_UNCHECKED_TYPE_IN_GENERIC_CALL",
  "title" : "Unchecked type in generic call",
  "description" : "Unchecked argument of type Object provided where type {3.givenClass} is expected in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "GC_UNRELATED_TYPES",
  "title" : "No relationship between generic parameter and method argument",
  "description" : "{2.givenClass} is incompatible with expected argument type {3.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "HARD_CODE_KEY",
  "title" : "Hard coded key",
  "description" : "Hard coded cryptographic key found",
  "parameters" : [ ]
}, {
  "patternId" : "HARD_CODE_PASSWORD",
  "title" : "Hard coded password",
  "description" : "Hard coded password found",
  "parameters" : [ ]
}, {
  "patternId" : "HAZELCAST_SYMMETRIC_ENCRYPTION",
  "title" : "Hazelcast symmetric encryption",
  "description" : "The network communication for Hazelcast are configured to use a symmetric cipher",
  "parameters" : [ ]
}, {
  "patternId" : "HCP_HTTP_REQUEST_RESOURCES_NOT_FREED_FIELD",
  "title" : "Unreleased HttpRequest network resources (field)",
  "description" : "The HttpRequest field {1} does not release its network resources, which could freeze the running code",
  "parameters" : [ ]
}, {
  "patternId" : "HCP_HTTP_REQUEST_RESOURCES_NOT_FREED_LOCAL",
  "title" : "Unreleased HttpRequest network resources (local)",
  "description" : "The local HttpRequest {1} does not release its network resources before being garbage collected, which could freeze the running code",
  "parameters" : [ ]
}, {
  "patternId" : "HES_EXECUTOR_NEVER_SHUTDOWN",
  "title" : "ExecutorService field doesn't ever get shutdown",
  "description" : "ExecutorService {2} is instantiated, but never shutdown, potentially preventing the entire JVM from shutting down",
  "parameters" : [ ]
}, {
  "patternId" : "HES_EXECUTOR_OVERWRITTEN_WITHOUT_SHUTDOWN",
  "title" : "An ExecutorService isn't shutdown before the reference to it is lost",
  "description" : "ExecutorService {2} is replaced with another ExecutorService without being shutdown, potentially preventing the entire JVM from shutting down",
  "parameters" : [ ]
}, {
  "patternId" : "HES_LOCAL_EXECUTOR_SERVICE",
  "title" : "Suspicious Local Executor Service",
  "description" : "ExecutorService is created as a local variable, which is unusual",
  "parameters" : [ ]
}, {
  "patternId" : "HE_EQUALS_NO_HASHCODE",
  "title" : "Class defines equals() but not hashCode()",
  "description" : "{0} defines equals but not hashCode",
  "parameters" : [ ]
}, {
  "patternId" : "HE_EQUALS_USE_HASHCODE",
  "title" : "Class defines equals() and uses Object.hashCode()",
  "description" : "{0} defines equals and uses Object.hashCode()",
  "parameters" : [ ]
}, {
  "patternId" : "HE_HASHCODE_NO_EQUALS",
  "title" : "Class defines hashCode() but not equals()",
  "description" : "{0} defines hashCode but not equals",
  "parameters" : [ ]
}, {
  "patternId" : "HE_HASHCODE_USE_OBJECT_EQUALS",
  "title" : "Class defines hashCode() and uses Object.equals()",
  "description" : "{0} defines hashCode and uses Object.equals()",
  "parameters" : [ ]
}, {
  "patternId" : "HE_INHERITS_EQUALS_USE_HASHCODE",
  "title" : "Class inherits equals() and uses Object.hashCode()",
  "description" : "{0} inherits equals and uses Object.hashCode()",
  "parameters" : [ ]
}, {
  "patternId" : "HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS",
  "title" : "Signature declares use of unhashable class in hashed construct",
  "description" : "{2} doesn't define a hashCode() method but it is used in a hashed context in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "HE_USE_OF_UNHASHABLE_CLASS",
  "title" : "Use of class without a hashCode() method in a hashed data structure",
  "description" : "{2} doesn't define a hashCode() method but is used in a hashed data structure in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "HRS_REQUEST_PARAMETER_TO_COOKIE",
  "title" : "HTTP cookie formed from untrusted input",
  "description" : "HTTP cookie formed from untrusted input in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "HRS_REQUEST_PARAMETER_TO_HTTP_HEADER",
  "title" : "HTTP Response splitting vulnerability",
  "description" : "HTTP parameter directly written to HTTP header output in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "HSC_HUGE_SHARED_STRING_CONSTANT",
  "title" : "Huge string constants is duplicated across multiple class files",
  "description" : "{1} is initialized to a string constant {2} characters long that is duplicated in {3} other class files",
  "parameters" : [ ]
}, {
  "patternId" : "HTTPONLY_COOKIE",
  "title" : "Cookie without the HttpOnly flag",
  "description" : "Cookie without the HttpOnly flag could be read by a malicious script in the browser",
  "parameters" : [ ]
}, {
  "patternId" : "HTTP_PARAMETER_POLLUTION",
  "title" : "HTTP Parameter Pollution",
  "description" : "Concatenating user-controlled input into a URL",
  "parameters" : [ ]
}, {
  "patternId" : "HTTP_RESPONSE_SPLITTING",
  "title" : "Potential HTTP Response Splitting",
  "description" : "This use of {3} might be used to include CRLF characters into HTTP headers",
  "parameters" : [ ]
}, {
  "patternId" : "IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD",
  "title" : "Potentially ambiguous invocation of either an inherited or outer method",
  "description" : "Potentially ambiguous invocation of either an outer or inherited method {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_BAD_SHIFT_AMOUNT",
  "title" : "32 bit int shifted by an amount not in the range -31..31",
  "description" : "32 bit int shifted by {2} bits in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_IDIV_CAST_TO_DOUBLE",
  "title" : "Integral division result cast to double or float",
  "description" : "Integral division result cast to double or float in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_INTEGER_MULTIPLY_CAST_TO_LONG",
  "title" : "Result of integer multiplication cast to long",
  "description" : "Result of integer multiplication cast to long in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_INT_2_LONG_AS_INSTANT",
  "title" : "int value converted to long and used as absolute time",
  "description" : "int converted to long and passed as absolute time to {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL",
  "title" : "Integral value cast to double and then passed to Math.ceil",
  "description" : "Integral value cast to double and then passed to Math.ceil in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND",
  "title" : "int value cast to float and then passed to Math.round",
  "description" : "int value cast to float and then passed to Math.round in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT",
  "title" : "Unsigned right shift cast to short/byte",
  "description" : "Unsigned right shift cast to short/byte in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "ICA_INVALID_CONSTANT_ARGUMENT",
  "title" : "Method passes an invalid value as a method argument",
  "description" : "Method {1} passes an invalid value as a method argument",
  "parameters" : [ ]
}, {
  "patternId" : "IC_INIT_CIRCULARITY",
  "title" : "Initialization circularity",
  "description" : "Initialization circularity between {0} and {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION",
  "title" : "Superclass uses subclass during initialization",
  "description" : "Initialization of {0} accesses class {2}, which isn't initialized yet",
  "parameters" : [ ]
}, {
  "patternId" : "IICU_INCORRECT_INTERNAL_CLASS_USE",
  "title" : "Class relies on internal API classes",
  "description" : "Class {0} relies on internal API classes",
  "parameters" : [ ]
}, {
  "patternId" : "IIL_ELEMENTS_GET_LENGTH_IN_LOOP",
  "title" : "NodeList.getLength() called in a loop",
  "description" : "{1} calls NodeList.getLength() in a loop for getElementsByTagName return value",
  "parameters" : [ ]
}, {
  "patternId" : "IIL_PATTERN_COMPILE_IN_LOOP",
  "title" : "Method calls Pattern.compile in a loop",
  "description" : "{1} calls Pattern.compile with the constant arguments in a loop",
  "parameters" : [ ]
}, {
  "patternId" : "IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT",
  "title" : "Method compiles the regular expression in a loop",
  "description" : "{1} compiles the regular expression in a loop",
  "parameters" : [ ]
}, {
  "patternId" : "IIL_PREPARE_STATEMENT_IN_LOOP",
  "title" : "Method calls prepareStatement in a loop",
  "description" : "{1} calls prepareStatement with the constant arguments in a loop",
  "parameters" : [ ]
}, {
  "patternId" : "IIO_INEFFICIENT_INDEX_OF",
  "title" : "Inefficient use of String.indexOf(String)",
  "description" : "{1} uses String.indexOf(String) instead of String.indexOf(int)",
  "parameters" : [ ]
}, {
  "patternId" : "IIO_INEFFICIENT_LAST_INDEX_OF",
  "title" : "Inefficient use of String.lastIndexOf(String)",
  "description" : "{1} uses String.lastIndexOf(String) instead of String.lastIndexOf(int)",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD",
  "title" : "JUnit assertion in run method will not be noticed by JUnit",
  "description" : "JUnit assertion in {1} will not be noticed by JUnit",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_BAD_SUITE_METHOD",
  "title" : "TestCase declares a bad suite method",
  "description" : "Bad declaration for suite method in {0}",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_NO_TESTS",
  "title" : "TestCase has no tests",
  "description" : "TestCase {0} has no tests",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_SETUP_NO_SUPER",
  "title" : "TestCase defines setUp that doesn't call super.setUp()",
  "description" : "TestCase {0} defines setUp that doesn't call super.setUp()",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_SUITE_NOT_STATIC",
  "title" : "TestCase implements a non-static suite method",
  "description" : "TestCase {0} implements a non-static suite method",
  "parameters" : [ ]
}, {
  "patternId" : "IJU_TEARDOWN_NO_SUPER",
  "title" : "TestCase defines tearDown that doesn't call super.tearDown()",
  "description" : "TestCase {0} defines tearDown that doesn't call super.tearDown()",
  "parameters" : [ ]
}, {
  "patternId" : "IKNC_INCONSISTENT_HTTP_ATTRIBUTE_CASING",
  "title" : "Method uses the same HttpSession attribute name but with different casing",
  "description" : "Method {1} uses the same HttpSession attribute name but with different casing",
  "parameters" : [ ]
}, {
  "patternId" : "IKNC_INCONSISTENT_HTTP_PARAM_CASING",
  "title" : "Method uses the same HttpRequest parameter name but with different casing",
  "description" : "Method {1} uses the same HttpRequest parameter name but with different casing",
  "parameters" : [ ]
}, {
  "patternId" : "IL_CONTAINER_ADDED_TO_ITSELF",
  "title" : "A collection is added to itself",
  "description" : "A collection is added to itself in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IL_INFINITE_LOOP",
  "title" : "An apparent infinite loop",
  "description" : "There is an apparent infinite loop in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IL_INFINITE_RECURSIVE_LOOP",
  "title" : "An apparent infinite recursive loop",
  "description" : "There is an apparent infinite recursive loop in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IMA_INEFFICIENT_MEMBER_ACCESS",
  "title" : "Method accesses a private member variable of owning class",
  "description" : "{1} accesses to a private member variable of owning class",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID",
  "title" : "Class defines a computed serialVersionUID that doesn't equate to the calculated value",
  "description" : "Class {0} defines a computed serialVersionUID that doesn't equate to the calculated value",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_IDE_GENERATED_PARAMETER_NAMES",
  "title" : "Method uses IDE generated parameter names",
  "description" : "Method {1} uses IDE generated parameter names",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_LOWER_CLASS",
  "title" : "Class does not start with an upper case letter",
  "description" : "Class {0} does not start with an upper case letter",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_NO_EQUALS",
  "title" : "Class does not implement an equals method",
  "description" : "Class {0} does not implement an equals method",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_NO_HASHCODE",
  "title" : "Class does not implement a hashCode method",
  "description" : "Class {0} does not implement a hashCode method",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_NO_PACKAGE",
  "title" : "Class is defined in the default package",
  "description" : "Class {0} id defined in the default package",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_NO_TOSTRING",
  "title" : "Class does not implement a toString method",
  "description" : "Class {0} does not implement a toString method",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_PRINTSTACKTRACE",
  "title" : "Method prints the stack trace to the console",
  "description" : "Method {1} prints the stack trace to the console",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_UPPER_PACKAGE",
  "title" : "Class is defined in a package with upper case characters",
  "description" : "Class {0} is defined in a package with upper case characters",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_VAR_NAME",
  "title" : "Class defines a field or local variable named 'var'",
  "description" : "Class {0} defines a field or local variable named 'var'",
  "parameters" : [ ]
}, {
  "patternId" : "IMC_IMMATURE_CLASS_WRONG_FIELD_ORDER",
  "title" : "Class orders instance fields before static fields",
  "description" : "Class {0} orders instance fields before static fields",
  "parameters" : [ ]
}, {
  "patternId" : "IMSE_DONT_CATCH_IMSE",
  "title" : "Dubious catching of IllegalMonitorStateException",
  "description" : "Dubious catching of IllegalMonitorStateException in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IM_AVERAGE_COMPUTATION_COULD_OVERFLOW",
  "title" : "Computation of average could overflow",
  "description" : "Computation of average could overflow in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IM_BAD_CHECK_FOR_ODD",
  "title" : "Check for oddness that won't work for negative numbers",
  "description" : "Check for oddness that won't work for negative numbers in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IM_MULTIPLYING_RESULT_OF_IREM",
  "title" : "Integer multiply of result of integer remainder",
  "description" : "Integer multiple of result of integer remainder in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE",
  "title" : "Information Exposure Through An Error Message",
  "description" : "Possible information exposure through an error message",
  "parameters" : [ ]
}, {
  "patternId" : "INSECURE_COOKIE",
  "title" : "Cookie without the secure flag",
  "description" : "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited",
  "parameters" : [ ]
}, {
  "patternId" : "INSECURE_SMTP_SSL",
  "title" : "Insecure SMTP SSL connection",
  "description" : " This SMTP SSL conncection does not verify the server certificate",
  "parameters" : [ ]
}, {
  "patternId" : "INT_BAD_COMPARISON_WITH_INT_VALUE",
  "title" : "Bad comparison of int value with long constant",
  "description" : "Bad comparison of int with {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE",
  "title" : "Bad comparison of nonnegative value with negative constant or zero",
  "description" : "Bad comparison of nonnegative value with {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INT_BAD_COMPARISON_WITH_SIGNED_BYTE",
  "title" : "Bad comparison of signed byte",
  "description" : "Bad comparison of signed byte with {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INT_BAD_REM_BY_1",
  "title" : "Integer remainder modulo 1",
  "description" : "Integer remainder modulo 1 computed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INT_VACUOUS_BIT_OPERATION",
  "title" : "Vacuous bit mask operation on integer value",
  "description" : "Vacuous {2} operation on {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "INT_VACUOUS_COMPARISON",
  "title" : "Vacuous comparison of integer value",
  "description" : "Vacuous comparison of integer value {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IOI_COPY_WITH_READER",
  "title" : "Method performs bulk stream copy with a java.io.Reader derived input",
  "description" : "Method {1} performs bulk stream copy with a java.io.Reader derived input",
  "parameters" : [ ]
}, {
  "patternId" : "IOI_DOUBLE_BUFFER_COPY",
  "title" : "Method passes a Buffered Stream/Reader/Writer to a already buffering copy method",
  "description" : "Method {1} passes a Buffered Stream/Reader/Writer to a already buffering copy method",
  "parameters" : [ ]
}, {
  "patternId" : "IOI_UNENDED_ZLIB_OBJECT",
  "title" : "Method creates a ZLIB Inflater or Deflater and doesn't appear to end() it",
  "description" : "Method {1} creates a ZLIB Inflater or Deflater and doesn't appear to end() it",
  "parameters" : [ ]
}, {
  "patternId" : "IOI_USE_OF_FILE_STREAM_CONSTRUCTORS",
  "title" : "Method uses a FileInputStream or FileOutputStream constructor",
  "description" : "Method {1} uses a FileInputStream or FileOutputStream constructor",
  "parameters" : [ ]
}, {
  "patternId" : "IO_APPENDING_TO_OBJECT_OUTPUT_STREAM",
  "title" : "Doomed attempt to append to an object output stream",
  "description" : "Doomed attempt to append to an object output stream in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "IPU_IMPROPER_PROPERTIES_USE",
  "title" : "Method puts non-String values into a Properties object",
  "description" : "Method {1} puts non-String values into a Properties object",
  "parameters" : [ ]
}, {
  "patternId" : "IPU_IMPROPER_PROPERTIES_USE_SETPROPERTY",
  "title" : "Method uses Properties.put instead of Properties.setProperty",
  "description" : "Method {1} uses Properties.put instead of Properties.setProperty",
  "parameters" : [ ]
}, {
  "patternId" : "IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN",
  "title" : "A parameter is dead upon entry to a method but overwritten",
  "description" : "The parameter {2} to {1} is dead upon entry but overwritten",
  "parameters" : [ ]
}, {
  "patternId" : "IS2_INCONSISTENT_SYNC",
  "title" : "Inconsistent synchronization",
  "description" : "Inconsistent synchronization of {1}; locked {2}% of time",
  "parameters" : [ ]
}, {
  "patternId" : "ISB_EMPTY_STRING_APPENDING",
  "title" : "Method concatenates an empty string to effect type conversion",
  "description" : "Method {1} concatenates an empty string to effect type conversion",
  "parameters" : [ ]
}, {
  "patternId" : "ISB_INEFFICIENT_STRING_BUFFERING",
  "title" : "Method passes simple concatenating string in StringBuffer or StringBuilder append",
  "description" : "Method {1} passes simple concatenating string in StringBuffer or StringBuilder append",
  "parameters" : [ ]
}, {
  "patternId" : "ISB_TOSTRING_APPENDING",
  "title" : "Method concatenates the result of a toString() call",
  "description" : "Method {1} concatenates the result of a toString() call",
  "parameters" : [ ]
}, {
  "patternId" : "ISC_INSTANTIATE_STATIC_CLASS",
  "title" : "Needless instantiation of class that only supplies static methods",
  "description" : "{1} needlessly instantiates a class that only supplies static methods",
  "parameters" : [ ]
}, {
  "patternId" : "IS_FIELD_NOT_GUARDED",
  "title" : "Field not guarded against concurrent access",
  "description" : "{1.givenClass} not guarded against concurrent access; locked {2}% of time",
  "parameters" : [ ]
}, {
  "patternId" : "IS_INCONSISTENT_SYNC",
  "title" : "Inconsistent synchronization",
  "description" : "Inconsistent synchronization of {1}; locked {2}% of the time",
  "parameters" : [ ]
}, {
  "patternId" : "ITA_INEFFICIENT_TO_ARRAY",
  "title" : "Method uses toArray() with zero-length array argument",
  "description" : "{1} uses Collection.toArray() with zero-length array argument",
  "parameters" : [ ]
}, {
  "patternId" : "ITC_INHERITANCE_TYPE_CHECKING",
  "title" : "Method uses instanceof on multiple types to arbitrate logic",
  "description" : "Method {1} uses instanceof on multiple types to arbitrate logic",
  "parameters" : [ ]
}, {
  "patternId" : "ITU_INAPPROPRIATE_TOSTRING_USE",
  "title" : "Method performs algorithmic operations on the result of a toString() call",
  "description" : "Method {1} performs algorithmic operations on the result of a toString() call",
  "parameters" : [ ]
}, {
  "patternId" : "IT_NO_SUCH_ELEMENT",
  "title" : "Iterator next() method can't throw NoSuchElementException",
  "description" : "{1} can't throw NoSuchElementException",
  "parameters" : [ ]
}, {
  "patternId" : "J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION",
  "title" : "Store of non serializable object into HttpSession",
  "description" : "Store of non serializable {2} into HttpSession in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "JACKSON_UNSAFE_DESERIALIZATION",
  "title" : "Unsafe Jackson deserialization configuration",
  "description" : "Unsafe Jackson deserialization configuration used in {1} {2} {3}",
  "parameters" : [ ]
}, {
  "patternId" : "JAXRS_ENDPOINT",
  "title" : "Found JAX-RS REST endpoint",
  "description" : "{0}.{1} is a REST Web Service endpoint",
  "parameters" : [ ]
}, {
  "patternId" : "JAXWS_ENDPOINT",
  "title" : "Found JAX-WS SOAP endpoint",
  "description" : "{0}.{1} is a SOAP Web Service endpoint",
  "parameters" : [ ]
}, {
  "patternId" : "JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS",
  "title" : "Fields of immutable classes should be final",
  "description" : "{1.givenClass} should be final since {0} is marked as Immutable.",
  "parameters" : [ ]
}, {
  "patternId" : "JLM_JSR166_LOCK_MONITORENTER",
  "title" : "Synchronization performed on Lock",
  "description" : "Synchronization performed on {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
  "title" : "Synchronization performed on util.concurrent instance",
  "description" : "Synchronization performed on {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT",
  "title" : "Using monitor style wait methods on util.concurrent abstraction",
  "description" : "Calling {2.name} rather than {3.name} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_HC_EQUALS_ON_MANAGED_ENTITY",
  "title" : "JPA Entity with Generated @Id defined with hashCode/equals",
  "description" : "JPA Entity {0} with Generated @Id defined with hashCode/equals",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_IGNORED_MERGE_RESULT",
  "title" : "Method ignores the return value of EntityManager.merge",
  "description" : "Method {1} ignores the return value of EntityManager.merge",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_INEFFICIENT_EAGER_FETCH",
  "title" : "OneToMany join specifies 1+n EAGER join",
  "description" : "OneToMany join specifies 1+n EAGER join",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_NON_PROXIED_TRANSACTION_CALL",
  "title" : "Method annotated with @Transactional is called from a non Spring proxy",
  "description" : "Method {1} annotated with @Transactional is called from a non Spring proxy",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_NON_SPECIFIED_TRANSACTION_EXCEPTION_HANDLING",
  "title" : "Method does not specify how to handle transaction when exception is thrown",
  "description" : "Method {1} does not specify how to handle transaction when exception is thrown",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_TRANSACTION_ON_NON_PUBLIC_METHOD",
  "title" : "Method has a Spring @Transactional annotation on it, but is non-public",
  "description" : "Method {1} has a Spring @Transactional annotation on it, but is non-public",
  "parameters" : [ ]
}, {
  "patternId" : "JPAI_UNNECESSARY_TRANSACTION_EXCEPTION_HANDLING",
  "title" : "Method declares handling a transactional exception that won't be thrown",
  "description" : "Method {1} declares handling a transactional exception that won't be thrown",
  "parameters" : [ ]
}, {
  "patternId" : "JSP_INCLUDE",
  "title" : "Dynamic JSP inclusion",
  "description" : "Dynamic JSP inclusion could lead to arbitrary code execution",
  "parameters" : [ ]
}, {
  "patternId" : "JSP_JSTL_OUT",
  "title" : "Escaping of special XML characters is disabled",
  "description" : "Disabling the escaping of special XML characters can lead to XSS vulnerabilities",
  "parameters" : [ ]
}, {
  "patternId" : "JSP_SPRING_EVAL",
  "title" : "Dynamic variable in Spring expression",
  "description" : "Dynamic variable in Spring expression could lead to arbitrary code execution",
  "parameters" : [ ]
}, {
  "patternId" : "JSP_XSLT",
  "title" : "A malicious XSLT could be provided to the JSP tag",
  "description" : "A malicious XSLT could be provided to the JSP tag to trigger remote code execution",
  "parameters" : [ ]
}, {
  "patternId" : "JUA_DONT_ASSERT_INSTANCEOF_IN_TESTS",
  "title" : " Asserting value of instanceof in tests is not recommended. ",
  "description" : " Assertion of type {0} in {2} at {3} may hide useful information about why a cast may have failed.",
  "parameters" : [ ]
}, {
  "patternId" : "JVR_JDBC_VENDOR_RELIANCE",
  "title" : "Method uses JDBC vendor specific classes and methods",
  "description" : "Method {1} uses JDBC vendor specific classes and methods",
  "parameters" : [ ]
}, {
  "patternId" : "JXI_GET_ENDPOINT_CONSUMES_CONTENT",
  "title" : "JAX-RS Method implements a GET request but consumes input",
  "description" : "JAX-RS Method {1} implements a GET request but consumes input",
  "parameters" : [ ]
}, {
  "patternId" : "JXI_INVALID_CONTEXT_PARAMETER_TYPE",
  "title" : "JAX-RS Method specifies an invalid @Context parameter type",
  "description" : "JAX-RS {1} Method specifies an invalid @Context parameter type",
  "parameters" : [ ]
}, {
  "patternId" : "JXI_PARM_PARAM_NOT_FOUND_IN_PATH",
  "title" : "JAX-RS Method specifies non-resolveable @PathParam",
  "description" : "JAX-RS Method {1} specifies non-resolveable @PathParam",
  "parameters" : [ ]
}, {
  "patternId" : "JXI_UNDEFINED_PARAMETER_SOURCE_IN_ENDPOINT",
  "title" : "JAX-RS Method defines a parameter that has no @*Param or @Context annotation, or @Consumes method annotation",
  "description" : "JAX-RS Method {1} defines a parameter that has no @*Param or @Context annotation, or @Consumes method annotation",
  "parameters" : [ ]
}, {
  "patternId" : "LDAP_ANONYMOUS",
  "title" : "Anonymous LDAP bind",
  "description" : "Anonymous LDAP bind",
  "parameters" : [ ]
}, {
  "patternId" : "LDAP_ENTRY_POISONING",
  "title" : "LDAP Entry Poisoning",
  "description" : "LDAP Entry Poisoning",
  "parameters" : [ ]
}, {
  "patternId" : "LDAP_INJECTION",
  "title" : "Potential LDAP Injection",
  "description" : "This use of {3} can be vulnerable to LDAP injection",
  "parameters" : [ ]
}, {
  "patternId" : "LEST_LOST_EXCEPTION_STACK_TRACE",
  "title" : "Method throws alternative exception from catch block without history",
  "description" : "Method {1} throws alternative exception from catch block without history",
  "parameters" : [ ]
}, {
  "patternId" : "LGO_LINGERING_GRAPHICS_OBJECT",
  "title" : "Method allocations a java.awt.Graphics object without disposing it",
  "description" : "Method {1} allocations a java.awt.Graphics object without disposing it",
  "parameters" : [ ]
}, {
  "patternId" : "LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE",
  "title" : "Potential lost logger changes due to weak reference in OpenJDK",
  "description" : "Changes to logger could be lost in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "LII_LIST_INDEXED_ITERATING",
  "title" : "Method uses integer based for loops to iterate over a List",
  "description" : "Method {1} uses integer based for loops to iterate over a List",
  "parameters" : [ ]
}, {
  "patternId" : "LI_LAZY_INIT_INSTANCE",
  "title" : "Incorrect lazy initialization of instance field",
  "description" : "Incorrect lazy initialization of instance field {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "LI_LAZY_INIT_STATIC",
  "title" : "Incorrect lazy initialization of static field",
  "description" : "Incorrect lazy initialization of static field {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "LI_LAZY_INIT_UPDATE_STATIC",
  "title" : "Incorrect lazy initialization and update of static field",
  "description" : "Incorrect lazy initialization and update of static field {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "LO_APPENDED_STRING_IN_FORMAT_STRING",
  "title" : "Method passes a concatenated string to SLF4J's or Log4j2's format string",
  "description" : "Method {1} passes a concatenated string to SLF4J's or Log4j2's format string",
  "parameters" : [ ]
}, {
  "patternId" : "LO_EMBEDDED_SIMPLE_STRING_FORMAT_IN_FORMAT_STRING",
  "title" : "Method passes a simple String.format result to an SLF4J's or Log4j2's format string",
  "description" : "Method {1} passes a simple String.format result to an SLF4J's or Log4j2's format string",
  "parameters" : [ ]
}, {
  "patternId" : "LO_EXCEPTION_WITH_LOGGER_PARMS",
  "title" : "Method creates exception with logger parameter markers in message",
  "description" : "Method {1} creates exception with logger parameter markers in message",
  "parameters" : [ ]
}, {
  "patternId" : "LO_INCORRECT_NUMBER_OF_ANCHOR_PARAMETERS",
  "title" : "Method passes an incorrect number of parameters to an SLF4J or Log4j2 logging statement",
  "description" : "Method {1} passes an incorrect number of parameters to an SLF4J or Log4j2 logging statement",
  "parameters" : [ ]
}, {
  "patternId" : "LO_INVALID_FORMATTING_ANCHOR",
  "title" : "Method attempts to log using numbered formatting anchors",
  "description" : "Method {1} attempts to log using numbered formatting anchors",
  "parameters" : [ ]
}, {
  "patternId" : "LO_INVALID_STRING_FORMAT_NOTATION",
  "title" : "Method attempts to log using String.format notation",
  "description" : "Method {1} attempts to log using String.format notation",
  "parameters" : [ ]
}, {
  "patternId" : "LO_LOGGER_LOST_EXCEPTION_STACK_TRACE",
  "title" : "Method incorrectly passes exception as first argument to logger method",
  "description" : "Method {1} incorrectly passes exception as first argument to logger method",
  "parameters" : [ ]
}, {
  "patternId" : "LO_NON_PRIVATE_STATIC_LOGGER",
  "title" : "Class defines non private logger using a static class context",
  "description" : "Class {0} defines a non private logger using a static class context",
  "parameters" : [ ]
}, {
  "patternId" : "LO_STUTTERED_MESSAGE",
  "title" : "Method stutters exception message in logger",
  "description" : "Method {1} stutters exception message in logger",
  "parameters" : [ ]
}, {
  "patternId" : "LO_SUSPECT_LOG_CLASS",
  "title" : "Method specifies an unrelated class when allocating a Logger",
  "description" : "Method {1} specifies an unrelated class when allocating a Logger.  Saw \"{3}\", expected \"{4}\".",
  "parameters" : [ ]
}, {
  "patternId" : "LO_SUSPECT_LOG_PARAMETER",
  "title" : "Constructor declares a Logger parameter",
  "description" : "Constructor {1} declares a Logger parameter",
  "parameters" : [ ]
}, {
  "patternId" : "LO_TOSTRING_PARAMETER",
  "title" : "Method explicitly calls toString() on a logger parameter",
  "description" : "Method {1} explicitly calls toString() on a logger parameter",
  "parameters" : [ ]
}, {
  "patternId" : "LSC_LITERAL_STRING_COMPARISON",
  "title" : "Method makes literal string comparisons passing the literal as an argument",
  "description" : "Method {1} makes literal string comparisons passing the literal as an argument",
  "parameters" : [ ]
}, {
  "patternId" : "LSYC_LOCAL_SYNCHRONIZED_COLLECTION",
  "title" : "Method creates local variable-based synchronized collection",
  "description" : "Method {1} creates local variable-based synchronized collection",
  "parameters" : [ ]
}, {
  "patternId" : "LUI_USE_COLLECTION_ADD",
  "title" : "Method passes a temporary one item list to Collection.addAll()",
  "description" : "Method {1} passes a temporary one item list to Collection.addAll()",
  "parameters" : [ ]
}, {
  "patternId" : "LUI_USE_GET0",
  "title" : "Method uses collection streaming to get first item in a List",
  "description" : "Method {1} uses collection streaming to get first item in a List",
  "parameters" : [ ]
}, {
  "patternId" : "LUI_USE_SINGLETON_LIST",
  "title" : "Method builds a list from one element using Arrays.asList",
  "description" : "Method {1} builds a list from one element using Arrays.asList rather than Collections.singletonList",
  "parameters" : [ ]
}, {
  "patternId" : "MAC_MANUAL_ARRAY_COPY",
  "title" : "Method copies arrays manually",
  "description" : "Method {1} copies arrays manually",
  "parameters" : [ ]
}, {
  "patternId" : "MALICIOUS_XSLT",
  "title" : "A malicious XSLT could be provided",
  "description" : "A malicious XSLT could be provided to trigger remote code execution",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_BIGDECIMAL_EQUALS",
  "title" : "Method calls BigDecimal.equals()",
  "description" : "Method {1} calls BigDecimal.equals(), which is normally a mistake",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_INETADDRESS_GETLOCALHOST",
  "title" : "Method calls InetAddress.getLocalHost()",
  "description" : "Method {1} calls InetAddress.getLocalHost(), which may be a security risk",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_LOCK_ISLOCKED",
  "title" : "Method tests if a lock is locked",
  "description" : "Method {1} tests if a lock is locked by calling {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_PROMISCUOUS_SERVERSOCKET",
  "title" : "Method creates promiscuous ServerSocket object",
  "description" : "Method {1} creates a promiscuous ServerSocket, which may be a security risk",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_RANDOM_SEED",
  "title" : "Method creates insecure Random object",
  "description" : "Method {1} creates an insecure Random object, which may be a security risk",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_RUNFINALIZATION",
  "title" : "Method triggers finalization",
  "description" : "Method {1} triggers finalization when calling {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_RUNTIME_EXIT_OR_HALT",
  "title" : "Method calls Runtime.exit() or Runtime.halt()",
  "description" : "Method {1} calls {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_SECURERANDOM",
  "title" : "Method calls deprecated SecureRandom method",
  "description" : "Method {1} calls deprecated SecureRandom method {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_SETDEFAULTLOCALE",
  "title" : "Method calls Locale.setDefault()",
  "description" : "Method {1} calls Locale.setDefault(), changing locale for all threads",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_SIGNAL_NOT_SIGNALALL",
  "title" : "Method calls Condition.signal() rather than Condition.signalAll()",
  "description" : "Method {1} calls Condition.signal() rather than Condition.signalAll()",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_STRING_BYTES_ENCODING",
  "title" : "Method encodes String bytes without specifying the character encoding",
  "description" : "Method {1} encodes String bytes without specifying the character encoding",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_THREAD_FAIRNESS",
  "title" : "Method ignores Lock's fairness settings by calling tryLock()",
  "description" : "Method {1} ignores Lock's fairness settings by calling {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_THREAD_PRIORITIES",
  "title" : "Method uses suspicious thread priorities",
  "description" : "Method {1} uses suspicious thread priorities by calling method {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_THREAD_YIELD",
  "title" : "Method attempts to manually schedule threads",
  "description" : "Method {1} attempts to manually schedule threads by calling method {2}",
  "parameters" : [ ]
}, {
  "patternId" : "MDM_WAIT_WITHOUT_TIMEOUT",
  "title" : "Method sleeps without timeout",
  "description" : "Method {1} sleeps without timeout when calling {2}",
  "parameters" : [ ]
}, {
  "patternId" : "ME_ENUM_FIELD_SETTER",
  "title" : "Public enum method unconditionally sets its field",
  "description" : "{1} unconditionally sets the field {2.name}",
  "parameters" : [ ]
}, {
  "patternId" : "ME_MUTABLE_ENUM_FIELD",
  "title" : "Enum field is public and mutable",
  "description" : "{1} field is public and mutable",
  "parameters" : [ ]
}, {
  "patternId" : "MF_CLASS_MASKS_FIELD",
  "title" : "Class defines field that masks a superclass field",
  "description" : "Field {1.givenClass} masks field in superclass {2.class}",
  "parameters" : [ ]
}, {
  "patternId" : "MF_METHOD_MASKS_FIELD",
  "title" : "Method defines a variable that obscures a field",
  "description" : "{1} defines a variable that obscures field {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD",
  "title" : "Synchronization on field in futile attempt to guard that field",
  "description" : "Synchronization on {2.givenClass} in futile attempt to guard it",
  "parameters" : [ ]
}, {
  "patternId" : "ML_SYNC_ON_UPDATED_FIELD",
  "title" : "Method synchronizes on an updated field",
  "description" : "{1} synchronizes on updated field {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "MOM_MISLEADING_OVERLOAD_MODEL",
  "title" : "Class 'overloads' a method with both instance and static versions",
  "description" : "Class {0} 'overloads' a method with both instance and static versions",
  "parameters" : [ ]
}, {
  "patternId" : "MRC_METHOD_RETURNS_CONSTANT",
  "title" : "Private or static method only returns one constant value",
  "description" : "Private or static method {1} only returns one constant value",
  "parameters" : [ ]
}, {
  "patternId" : "MSF_MUTABLE_SERVLET_FIELD",
  "title" : "Mutable servlet field",
  "description" : "{1} is a mutable servlet field",
  "parameters" : [ ]
}, {
  "patternId" : "MS_CANNOT_BE_FINAL",
  "title" : "Field isn't final and can't be protected from malicious code",
  "description" : "{1} isn't final and can't be protected from malicious code",
  "parameters" : [ ]
}, {
  "patternId" : "MS_EXPOSE_REP",
  "title" : "Public static method may expose internal representation by returning array",
  "description" : "Public static {1} may expose internal representation by returning {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "MS_FINAL_PKGPROTECT",
  "title" : "Field should be both final and package protected",
  "description" : "{1} should be both final and package protected",
  "parameters" : [ ]
}, {
  "patternId" : "MS_MUTABLE_ARRAY",
  "title" : "Field is a mutable array",
  "description" : "{1} is a mutable array",
  "parameters" : [ ]
}, {
  "patternId" : "MS_MUTABLE_COLLECTION",
  "title" : "Field is a mutable collection",
  "description" : "{1} is a mutable collection",
  "parameters" : [ ]
}, {
  "patternId" : "MS_MUTABLE_COLLECTION_PKGPROTECT",
  "title" : "Field is a mutable collection which should be package protected",
  "description" : "{1} is a mutable collection which should be package protected",
  "parameters" : [ ]
}, {
  "patternId" : "MS_MUTABLE_HASHTABLE",
  "title" : "Field is a mutable Hashtable",
  "description" : "{1} is a mutable Hashtable",
  "parameters" : [ ]
}, {
  "patternId" : "MS_OOI_PKGPROTECT",
  "title" : "Field should be moved out of an interface and made package protected",
  "description" : "{1} should be moved out of an interface and made package protected",
  "parameters" : [ ]
}, {
  "patternId" : "MS_PKGPROTECT",
  "title" : "Field should be package protected",
  "description" : "{1} should be package protected",
  "parameters" : [ ]
}, {
  "patternId" : "MS_SHOULD_BE_FINAL",
  "title" : "Field isn't final but should be",
  "description" : "{1} isn't final but should be",
  "parameters" : [ ]
}, {
  "patternId" : "MS_SHOULD_BE_REFACTORED_TO_BE_FINAL",
  "title" : "Field isn't final but should be refactored to be so",
  "description" : "{1} isn't final but should be refactored to be so",
  "parameters" : [ ]
}, {
  "patternId" : "MTIA_SUSPECT_SERVLET_INSTANCE_FIELD",
  "title" : "Class extends Servlet class and uses instance variables",
  "description" : "Class {0} extends Servlet class and uses instance variables",
  "parameters" : [ ]
}, {
  "patternId" : "MTIA_SUSPECT_STRUTS_INSTANCE_FIELD",
  "title" : "Class extends Struts Action class and uses instance variables",
  "description" : "Class {0} extends Struts Action class and uses instance variables",
  "parameters" : [ ]
}, {
  "patternId" : "MUC_MODIFYING_UNMODIFIABLE_COLLECTION",
  "title" : "This method attempts to modify collection that appears to possibly be immutable",
  "description" : "This method {1} attempts to modify collection that appears to possibly be immutable",
  "parameters" : [ ]
}, {
  "patternId" : "MUI_CALLING_SIZE_ON_SUBCONTAINER",
  "title" : "Method calls size() on a sub collection of a Map",
  "description" : "Method {1} calls size() on a sub collection of a Map",
  "parameters" : [ ]
}, {
  "patternId" : "MUI_CONTAINSKEY_BEFORE_GET",
  "title" : "Method check a map with containsKey(), before using get()",
  "description" : "Method {1} checks a map with containsKey(), before using get()",
  "parameters" : [ ]
}, {
  "patternId" : "MUI_GET_BEFORE_REMOVE",
  "title" : "Method gets an item from a map with get(), before using remove()",
  "description" : "Method {1} gets an item from a map with get(), before using remove()",
  "parameters" : [ ]
}, {
  "patternId" : "MUI_NULL_CHECK_ON_MAP_SUBSET_ACCESSOR",
  "title" : "Method checks whether the keySet(), entrySet() or values() collection of a Map is null",
  "description" : "Method {1} checks whether the keySet(), entrySet() or values() collection of a Map is null",
  "parameters" : [ ]
}, {
  "patternId" : "MUI_USE_CONTAINSKEY",
  "title" : "Method calls keySet() just to call contains, use containsKey instead",
  "description" : "Method {1} calls keySet() just to call contains, use containsKey instead",
  "parameters" : [ ]
}, {
  "patternId" : "MWN_MISMATCHED_NOTIFY",
  "title" : "Mismatched notify()",
  "description" : "Mismatched notify() in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "MWN_MISMATCHED_WAIT",
  "title" : "Mismatched wait()",
  "description" : "Mismatched wait() in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_AUTOBOXING_CTOR",
  "title" : "Method passes primitive wrapper to same primitive wrapper constructor",
  "description" : "Method {1} passes primitive wrapper to same primitive wrapper constructor",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_AUTOBOXING_VALUEOF",
  "title" : "Method passes primitive wrapper to Wrapper class valueOf method",
  "description" : "Method {1} passes primitive wrapper to Wrapper class valueOf method",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOOLEAN_CONSTANT_CONVERSION",
  "title" : "Method needlessly boxes a boolean constant",
  "description" : "Method {1} needlessly boxes a boolean constant",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOXING_PARSE",
  "title" : "Method converts String to primitive using excessive boxing",
  "description" : "Method {1} converts String to primitive using excessive boxing",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOXING_STRING_CTOR",
  "title" : "Method passes parsed string to primitive wrapper constructor",
  "description" : "Method {1} passes parsed string to primitive wrapper constructor",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOXING_VALUEOF",
  "title" : "Method converts String to boxed primitive using excessive boxing",
  "description" : "Method {1} converts String to boxed primitive using excessive boxing",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOX_TO_CAST",
  "title" : "Method creates Boxed primitive from primitive only to cast to another primitive type",
  "description" : "Method {1} creates Boxed primitive from primitive only to cast to another primitive type",
  "parameters" : [ ]
}, {
  "patternId" : "NAB_NEEDLESS_BOX_TO_UNBOX",
  "title" : "Method creates Boxed primitive from primitive only to get primitive value",
  "description" : "Method {1} creates Boxed primitive from primitive only to get primitive value",
  "parameters" : [ ]
}, {
  "patternId" : "NCMU_NON_COLLECTION_METHOD_USE",
  "title" : "Method uses old non collections interface methods",
  "description" : "Method {1} uses old non collections interface methods",
  "parameters" : [ ]
}, {
  "patternId" : "NCS_NEEDLESS_CUSTOM_SERIALIZATION",
  "title" : "Method needlessly implements what is default streaming behavior",
  "description" : "Method {1} needlessly implements what is default streaming behavior",
  "parameters" : [ ]
}, {
  "patternId" : "NFF_NON_FUNCTIONAL_FIELD",
  "title" : "Serializable class defines a final transient field",
  "description" : "Serializable class {0} defines a final transient field",
  "parameters" : [ ]
}, {
  "patternId" : "NIR_NEEDLESS_INSTANCE_RETRIEVAL",
  "title" : "Method retrieves instance to load static member",
  "description" : "Method {1} retrieves instance to load static member",
  "parameters" : [ ]
}, {
  "patternId" : "NMCS_NEEDLESS_MEMBER_COLLECTION_SYNCHRONIZATION",
  "title" : "Class defines unneeded synchronization on member collection",
  "description" : "Class {0} defines unneeded synchronization on member collection",
  "parameters" : [ ]
}, {
  "patternId" : "NM_BAD_EQUAL",
  "title" : "Class defines equal(Object); should it be equals(Object)?",
  "description" : "Class {0} defines equal(Object); should it be equals(Object)?",
  "parameters" : [ ]
}, {
  "patternId" : "NM_CLASS_NAMING_CONVENTION",
  "title" : "Class names should start with an upper case letter",
  "description" : "The class name {0} doesn't start with an upper case letter",
  "parameters" : [ ]
}, {
  "patternId" : "NM_CLASS_NOT_EXCEPTION",
  "title" : "Class is not derived from an Exception, even though it is named as such",
  "description" : "Class {0} is not derived from an Exception, even though it is named as such",
  "parameters" : [ ]
}, {
  "patternId" : "NM_CONFUSING",
  "title" : "Confusing method names",
  "description" : "Confusing to have methods {1} and {3}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_FIELD_NAMING_CONVENTION",
  "title" : "Field names should start with a lower case letter",
  "description" : "The field name {1} doesn't start with a lower case letter",
  "parameters" : [ ]
}, {
  "patternId" : "NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER",
  "title" : "Use of identifier that is a keyword in later versions of Java",
  "description" : "{1} uses {2} for a variable name, which is a keyword in later versions of Java",
  "parameters" : [ ]
}, {
  "patternId" : "NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER",
  "title" : "Use of identifier that is a keyword in later versions of Java",
  "description" : "{1} conflicts with a keyword in a more recent version of Java",
  "parameters" : [ ]
}, {
  "patternId" : "NM_LCASE_HASHCODE",
  "title" : "Class defines hashcode(); should it be hashCode()?",
  "description" : "Class {0} defines hashcode(); should it be hashCode()?",
  "parameters" : [ ]
}, {
  "patternId" : "NM_LCASE_TOSTRING",
  "title" : "Class defines tostring(); should it be toString()?",
  "description" : "Class {0} defines tostring(); should it be toString()?",
  "parameters" : [ ]
}, {
  "patternId" : "NM_METHOD_CONSTRUCTOR_CONFUSION",
  "title" : "Apparent method/constructor confusion",
  "description" : "{1} was probably intended to be a constructor",
  "parameters" : [ ]
}, {
  "patternId" : "NM_METHOD_NAMING_CONVENTION",
  "title" : "Method names should start with a lower case letter",
  "description" : "The method name {1} doesn't start with a lower case letter",
  "parameters" : [ ]
}, {
  "patternId" : "NM_SAME_SIMPLE_NAME_AS_INTERFACE",
  "title" : "Class names shouldn't shadow simple name of implemented interface",
  "description" : "The class name {0} shadows the simple name of implemented interface {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS",
  "title" : "Class names shouldn't shadow simple name of superclass",
  "description" : "The class name {0} shadows the simple name of the superclass {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_VERY_CONFUSING",
  "title" : "Very confusing method names",
  "description" : "VERY confusing to have methods {1} and {3}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_VERY_CONFUSING_INTENTIONAL",
  "title" : "Very confusing method names (but perhaps intentional)",
  "description" : "VERY confusing (but perhaps intentional) to have methods {1} and {3}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_WRONG_PACKAGE",
  "title" : "Method doesn't override method in superclass due to wrong package for parameter",
  "description" : "{1} doesn't override method in superclass because parameter type {4} doesn't match superclass parameter type {5}",
  "parameters" : [ ]
}, {
  "patternId" : "NM_WRONG_PACKAGE_INTENTIONAL",
  "title" : "Method doesn't override method in superclass due to wrong package for parameter",
  "description" : "{1} doesn't override method in superclass because parameter type {4} doesn't match superclass parameter type {5}",
  "parameters" : [ ]
}, {
  "patternId" : "NN_NAKED_NOTIFY",
  "title" : "Naked notify",
  "description" : "Naked notify in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NOISE_FIELD_REFERENCE",
  "title" : "Bogus warning about a field reference",
  "description" : "Bogus warning about a reference to {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NOISE_METHOD_CALL",
  "title" : "Bogus warning about a method call",
  "description" : "Bogus warning about a method call {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NOISE_NULL_DEREFERENCE",
  "title" : "Bogus warning about a null pointer dereference",
  "description" : "Bogus warning about a null pointer dereference in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NOISE_OPERATION",
  "title" : "Bogus warning about an operation",
  "description" : "Bogus warning about an operation {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NOS_NON_OWNED_SYNCHRONIZATION",
  "title" : "Class uses non owned variables to synchronize on",
  "description" : "Class {0} uses non owned variables to synchronize on",
  "parameters" : [ ]
}, {
  "patternId" : "NO_NOTIFY_NOT_NOTIFYALL",
  "title" : "Using notify() rather than notifyAll()",
  "description" : "Using notify rather than notifyAll in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NPMC_NON_PRODUCTIVE_METHOD_CALL",
  "title" : "Method ignores return value of a non mutating method",
  "description" : "Method {1} ignores return value of a non mutating method",
  "parameters" : [ ]
}, {
  "patternId" : "NP_ALWAYS_NULL",
  "title" : "Null pointer dereference",
  "description" : "Null pointer dereference of {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_ALWAYS_NULL_EXCEPTION",
  "title" : "Null pointer dereference in method on exception path",
  "description" : "Null pointer dereference of {2.givenClass} in {1} on exception path",
  "parameters" : [ ]
}, {
  "patternId" : "NP_ARGUMENT_MIGHT_BE_NULL",
  "title" : "Method does not check for null argument",
  "description" : "{1} does not check for null argument",
  "parameters" : [ ]
}, {
  "patternId" : "NP_BOOLEAN_RETURN_NULL",
  "title" : "Method with Boolean return type returns explicit null",
  "description" : "{1} has Boolean return type and returns explicit null",
  "parameters" : [ ]
}, {
  "patternId" : "NP_CLONE_COULD_RETURN_NULL",
  "title" : "Clone method may return null",
  "description" : "{1} may return null",
  "parameters" : [ ]
}, {
  "patternId" : "NP_CLOSING_NULL",
  "title" : "close() invoked on a value that is always null",
  "description" : "Can't close {2.givenClass} since it is always null in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_DEREFERENCE_OF_READLINE_VALUE",
  "title" : "Dereference of the result of readLine() without nullcheck",
  "description" : "Dereference of the result of readLine() without nullcheck in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT",
  "title" : "equals() method does not check for null argument",
  "description" : "{1} does not check for null argument",
  "parameters" : [ ]
}, {
  "patternId" : "NP_GUARANTEED_DEREF",
  "title" : "Null value is guaranteed to be dereferenced",
  "description" : "{2.givenClass} could be null and is guaranteed to be dereferenced in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH",
  "title" : "Value is null and guaranteed to be dereferenced on exception path",
  "description" : "{2.name} is null guaranteed to be dereferenced in {1} on exception path",
  "parameters" : [ ]
}, {
  "patternId" : "NP_IMMEDIATE_DEREFERENCE_OF_READLINE",
  "title" : "Immediate dereference of the result of readLine()",
  "description" : "Immediate dereference of the result of readLine() in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_LOAD_OF_KNOWN_NULL_VALUE",
  "title" : "Load of known null value",
  "description" : "Load of known null value in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_METHOD_PARAMETER_RELAXING_ANNOTATION",
  "title" : "Method tightens nullness annotation on parameter",
  "description" : "Method {1} overrides the nullness annotation relaxing the ancestor method requirements on parameter.",
  "parameters" : [ ]
}, {
  "patternId" : "NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION",
  "title" : "Method tightens nullness annotation on parameter",
  "description" : "Method {1} overrides the nullness annotation of parameter {2} in an incompatible way",
  "parameters" : [ ]
}, {
  "patternId" : "NP_METHOD_RETURN_RELAXING_ANNOTATION",
  "title" : "Method relaxes nullness annotation on return value",
  "description" : "Method {1} overrides the return value nullness annotation in an incompatible way.",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
  "title" : "Non-null field is not initialized",
  "description" : "Non-null field {2.name} is not initialized by {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NONNULL_PARAM_VIOLATION",
  "title" : "Method call passes null to a non-null parameter",
  "description" : "Null passed for non-null parameter of {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NONNULL_RETURN_VIOLATION",
  "title" : "Method may return null, but is declared @Nonnull",
  "description" : "{1} may return null, but is declared @Nonnull",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_INSTANCEOF",
  "title" : "A known null value is checked to see if it is an instance of a type",
  "description" : "A known null value is checked to see if it is an instance of {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_ON_SOME_PATH",
  "title" : "Possible null pointer dereference",
  "description" : "Possible null pointer dereference of {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_ON_SOME_PATH_EXCEPTION",
  "title" : "Possible null pointer dereference in method on exception path",
  "description" : "Possible null pointer dereference of {2.givenClass} in {1} on exception path",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
  "title" : "Possible null pointer dereference due to return value of called method",
  "description" : "Possible null pointer dereference in {1} due to return value of called method",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE",
  "title" : "Possible null pointer dereference on branch that might be infeasible",
  "description" : "Possible null pointer dereference of {2.givenClass} on branch that might be infeasible in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_PARAM_DEREF",
  "title" : "Method call passes null for non-null parameter",
  "description" : "Null passed for non-null parameter of {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS",
  "title" : "Method call passes null for non-null parameter",
  "description" : "Null passed for non-null parameter of {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_NULL_PARAM_DEREF_NONVIRTUAL",
  "title" : "Non-virtual method call passes null for non-null parameter",
  "description" : "Non-virtual method call in {1} passes null for non-null parameter of {2.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_OPTIONAL_RETURN_NULL",
  "title" : "Method with Optional return type returns explicit null",
  "description" : "{1} has Optional return type and returns explicit null",
  "parameters" : [ ]
}, {
  "patternId" : "NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE",
  "title" : "Parameter must be non-null but is marked as nullable",
  "description" : "{2} must be non-null but is marked as nullable",
  "parameters" : [ ]
}, {
  "patternId" : "NP_STORE_INTO_NONNULL_FIELD",
  "title" : "Store of null value into field annotated @Nonnull",
  "description" : "Store of null value into field {2.givenClass} annotated @Nonnull in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_SYNC_AND_NULL_CHECK_FIELD",
  "title" : "Synchronize and null check on the same field.",
  "description" : "In {1} the field {2.givenClass} is synchronized on and then checked if null.",
  "parameters" : [ ]
}, {
  "patternId" : "NP_TOSTRING_COULD_RETURN_NULL",
  "title" : "toString method may return null",
  "description" : "{1} may return null",
  "parameters" : [ ]
}, {
  "patternId" : "NP_UNWRITTEN_FIELD",
  "title" : "Read of unwritten field",
  "description" : "Read of unwritten field {2.name} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
  "title" : "Read of unwritten public or protected field",
  "description" : "Read of unwritten public or protected field {2.name} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NRTL_NON_RECYCLEABLE_TAG_LIB",
  "title" : "Tag library is not recycleable",
  "description" : "Tag library {0} is not recycleable",
  "parameters" : [ ]
}, {
  "patternId" : "NSE_NON_SYMMETRIC_EQUALS",
  "title" : "Equals method compares this object against other types in a non symmetric way",
  "description" : "Equals method {1} compares this object against other types in a non symmetric way",
  "parameters" : [ ]
}, {
  "patternId" : "NS_DANGEROUS_NON_SHORT_CIRCUIT",
  "title" : "Potentially dangerous use of non-short-circuit logic",
  "description" : "Potentially dangerous use of non-short-circuit logic in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NS_NON_SHORT_CIRCUIT",
  "title" : "Questionable use of non-short-circuit logic",
  "description" : "Questionable use of non-short-circuit logic in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "NULL_CIPHER",
  "title" : "NullCipher is insecure",
  "description" : "The use of a NullCipher is typically not desirable",
  "parameters" : [ ]
}, {
  "patternId" : "OBJECT_DESERIALIZATION",
  "title" : "Object deserialization is used in {1}",
  "description" : "Object deserialization is used in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "OBL_UNSATISFIED_OBLIGATION",
  "title" : "Method may fail to clean up stream or resource",
  "description" : "{1} may fail to clean up {2}",
  "parameters" : [ ]
}, {
  "patternId" : "OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE",
  "title" : "Method may fail to clean up stream or resource on checked exception",
  "description" : "{1} may fail to clean up {2} on checked exception",
  "parameters" : [ ]
}, {
  "patternId" : "OCP_OVERLY_CONCRETE_PARAMETER",
  "title" : "Method needlessly defines parameter with concrete classes",
  "description" : "{1}: {3}",
  "parameters" : [ ]
}, {
  "patternId" : "OC_OVERZEALOUS_CASTING",
  "title" : "Method manually casts the right hand side of an assignment more specifically than needed",
  "description" : "Method {1} manually casts the right hand side of an assignment more specifically than needed",
  "parameters" : [ ]
}, {
  "patternId" : "ODN_ORPHANED_DOM_NODE",
  "title" : "Method creates DOM node but doesn't attach it to a document",
  "description" : "Method {1} creates DOM node but doesn't attach it to a document",
  "parameters" : [ ]
}, {
  "patternId" : "ODR_OPEN_DATABASE_RESOURCE",
  "title" : "Method may fail to close database resource",
  "description" : "{1} may fail to close {2.excludingPackage}",
  "parameters" : [ ]
}, {
  "patternId" : "ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH",
  "title" : "Method may fail to close database resource on exception",
  "description" : "{1} may fail to close database resource on exception",
  "parameters" : [ ]
}, {
  "patternId" : "OGNL_INJECTION",
  "title" : "Potential code injection when using OGNL expression",
  "description" : "Potential code injection when using OGNL expression",
  "parameters" : [ ]
}, {
  "patternId" : "OI_OPTIONAL_ISSUES_CHECKING_REFERENCE",
  "title" : "Method checks an Optional reference for null",
  "description" : "Method {1} checks an Optional reference for null",
  "parameters" : [ ]
}, {
  "patternId" : "OI_OPTIONAL_ISSUES_PRIMITIVE_VARIANT_PREFERRED",
  "title" : "Method uses a java.util.Optional when use of OptionalInt, OptionalLong, OptionalDouble would be more clear",
  "description" : "Method {1} uses a java.util.Optional when use of OptionalInt, OptionalLong, OptionalDouble would be more clear",
  "parameters" : [ ]
}, {
  "patternId" : "OI_OPTIONAL_ISSUES_USES_DELAYED_EXECUTION",
  "title" : "Method uses delayed execution of a block of code that is trivial",
  "description" : "Method {1} uses immediate execution of a block of code that is trivial",
  "parameters" : [ ]
}, {
  "patternId" : "OI_OPTIONAL_ISSUES_USES_IMMEDIATE_EXECUTION",
  "title" : "Method uses immediate execution of a block of code that is often not used",
  "description" : "Method {1} uses immediate execution of a block of code that is often not used",
  "parameters" : [ ]
}, {
  "patternId" : "OI_OPTIONAL_ISSUES_USES_ORELSEGET_WITH_NULL",
  "title" : "Method uses Optional.orElseGet(null)",
  "description" : "Method {1} uses Optional.orElseGet(null)",
  "parameters" : [ ]
}, {
  "patternId" : "OPM_OVERLY_PERMISSIVE_METHOD",
  "title" : "This method is declared more permissively than is used in the code base",
  "description" : "This method {1} is declared more permissively than is used in the code base",
  "parameters" : [ ]
}, {
  "patternId" : "OS_OPEN_STREAM",
  "title" : "Method may fail to close stream",
  "description" : "{1} may fail to close stream",
  "parameters" : [ ]
}, {
  "patternId" : "OS_OPEN_STREAM_EXCEPTION_PATH",
  "title" : "Method may fail to close stream on exception",
  "description" : "{1} may fail to close stream on exception",
  "parameters" : [ ]
}, {
  "patternId" : "OVERLY_PERMISSIVE_FILE_PERMISSION",
  "title" : "Overly permissive file permission",
  "description" : "Overly permissive file permission can lead to privilege escalation or information leakage.",
  "parameters" : [ ]
}, {
  "patternId" : "OVERRIDING_METHODS_MUST_INVOKE_SUPER",
  "title" : "Super method is annotated with @OverridingMethodsMustInvokeSuper, but the overriding method isn't calling the super method.",
  "description" : "Super method is annotated with @OverridingMethodsMustInvokeSuper, but {1} isn't calling the super method.",
  "parameters" : [ ]
}, {
  "patternId" : "PADDING_ORACLE",
  "title" : "Cipher is susceptible to Padding Oracle",
  "description" : "The cipher is susceptible to padding oracle attacks",
  "parameters" : [ ]
}, {
  "patternId" : "PATH_TRAVERSAL_IN",
  "title" : "Potential Path Traversal (file read)",
  "description" : "This API ({3}) reads a file whose location might be specified by user input",
  "parameters" : [ ]
}, {
  "patternId" : "PATH_TRAVERSAL_OUT",
  "title" : "Potential Path Traversal (file write)",
  "description" : "This API ({3}) writes to a file whose location might be specified by user input",
  "parameters" : [ ]
}, {
  "patternId" : "PCAIL_POSSIBLE_CONSTANT_ALLOCATION_IN_LOOP",
  "title" : "Method allocates an object that is used in a constant way in a loop",
  "description" : "Method {1} allocates an object that is used in a constant way in a loop",
  "parameters" : [ ]
}, {
  "patternId" : "PCOA_PARTIALLY_CONSTRUCTED_OBJECT_ACCESS",
  "title" : "Constructor makes call to non-final method",
  "description" : "Constructor {1} makes call to non-final method",
  "parameters" : [ ]
}, {
  "patternId" : "PDP_POORLY_DEFINED_PARAMETER",
  "title" : "Method defines parameters more abstractly than needed to function properly",
  "description" : "Method {1} defines parameters more abstractly than needed to function properly",
  "parameters" : [ ]
}, {
  "patternId" : "PERMISSIVE_CORS",
  "title" : "Overly permissive CORS policy",
  "description" : "The program defines an overly permissive Cross-Origin Resource Sharing (CORS) policy",
  "parameters" : [ ]
}, {
  "patternId" : "PIS_POSSIBLE_INCOMPLETE_SERIALIZATION",
  "title" : "Class doesn't serialize superclass fields",
  "description" : "Class {0} doesn't serialize superclass fields",
  "parameters" : [ ]
}, {
  "patternId" : "PLAY_UNVALIDATED_REDIRECT",
  "title" : "Unvalidated Redirect (Play Framework)",
  "description" : "The following redirection could be used by an attacker to redirect users to a phishing website. (in the context of the Play Framework)",
  "parameters" : [ ]
}, {
  "patternId" : "PL_PARALLEL_LISTS",
  "title" : "Class defines two or more one for one associated lists or arrays",
  "description" : "Class {0} defines two or more one for one associated lists or arrays",
  "parameters" : [ ]
}, {
  "patternId" : "PMB_INSTANCE_BASED_THREAD_LOCAL",
  "title" : "Field is an instance based ThreadLocal variable",
  "description" : "Field {1} is an instance based ThreadLocal variable",
  "parameters" : [ ]
}, {
  "patternId" : "PMB_LOCAL_BASED_JAXB_CONTEXT",
  "title" : "Local JAXBContext created on demand",
  "description" : "Method {1} createa a local JAXBContext on demand",
  "parameters" : [ ]
}, {
  "patternId" : "PMB_POSSIBLE_MEMORY_BLOAT",
  "title" : "Potential memory bloat in static field",
  "description" : "Class {0} defines static field \"{1}\" which appears to allow memory bloat",
  "parameters" : [ ]
}, {
  "patternId" : "PME_POOR_MANS_ENUM",
  "title" : "Simple field is used like an enum",
  "description" : "Simple field {1} is used like an enum",
  "parameters" : [ ]
}, {
  "patternId" : "PREDICTABLE_RANDOM",
  "title" : "Predictable pseudorandom number generator",
  "description" : "This random generator ({3}) is predictable",
  "parameters" : [ ]
}, {
  "patternId" : "PREDICTABLE_RANDOM_SCALA",
  "title" : "Predictable pseudorandom number generator (Scala)",
  "description" : "This Scala random generator ({3}) is predictable",
  "parameters" : [ ]
}, {
  "patternId" : "PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS",
  "title" : "Method appears to call the same method on the same object redundantly",
  "description" : "Method {1} appears to call the same method on the same object redundantly",
  "parameters" : [ ]
}, {
  "patternId" : "PSC_PRESIZE_COLLECTIONS",
  "title" : "Method does not presize the allocation of a collection",
  "description" : "Method {1} does not presize the allocation of a collection",
  "parameters" : [ ]
}, {
  "patternId" : "PSC_SUBOPTIMAL_COLLECTION_SIZING",
  "title" : "Method uses suboptimal sizing to allocate a collection",
  "description" : "Method {1} uses suboptimal sizing to allocate a collection",
  "parameters" : [ ]
}, {
  "patternId" : "PS_PUBLIC_SEMAPHORES",
  "title" : "Class exposes synchronization and semaphores in its public interface",
  "description" : "Class {0} exposes synchronization and semaphores in its public interface",
  "parameters" : [ ]
}, {
  "patternId" : "PT_ABSOLUTE_PATH_TRAVERSAL",
  "title" : "Absolute path traversal in servlet",
  "description" : "Absolute path traversal in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "PT_RELATIVE_PATH_TRAVERSAL",
  "title" : "Relative path traversal in servlet",
  "description" : "Relative path traversal in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "PUS_POSSIBLE_UNSUSPECTED_SERIALIZATION",
  "title" : "Method serializes an instance of a non-static inner class",
  "description" : "Method {1} serializes an instance of a non-static inner class",
  "parameters" : [ ]
}, {
  "patternId" : "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
  "title" : "Consider returning a zero length array rather than null",
  "description" : "Should {1} return a zero length array rather than null?",
  "parameters" : [ ]
}, {
  "patternId" : "PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS",
  "title" : "Don't reuse entry objects in iterators",
  "description" : "{0} is both an Iterator and a Map.Entry",
  "parameters" : [ ]
}, {
  "patternId" : "QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT",
  "title" : "Method assigns boolean literal in boolean expression",
  "description" : "{1} assigns boolean literal in boolean expression",
  "parameters" : [ ]
}, {
  "patternId" : "QF_QUESTIONABLE_FOR_LOOP",
  "title" : "Complicated, subtle or wrong increment in for-loop",
  "description" : "Complicated, subtle or wrong increment in for-loop {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RANGE_ARRAY_INDEX",
  "title" : "Array index is out of bounds",
  "description" : "Array index is out of bounds: {3}",
  "parameters" : [ ]
}, {
  "patternId" : "RANGE_ARRAY_LENGTH",
  "title" : "Array length is out of bounds",
  "description" : "Array length is out of bounds: {3}",
  "parameters" : [ ]
}, {
  "patternId" : "RANGE_ARRAY_OFFSET",
  "title" : "Array offset is out of bounds",
  "description" : "Array offset is out of bounds: {3}",
  "parameters" : [ ]
}, {
  "patternId" : "RANGE_STRING_INDEX",
  "title" : "String index is out of bounds",
  "description" : "String index is out of bounds when calling {5}: {3}",
  "parameters" : [ ]
}, {
  "patternId" : "RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE",
  "title" : "Redundant comparison of non-null value to null",
  "description" : "Redundant comparison of non-null value to null in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES",
  "title" : "Redundant comparison of two null values",
  "description" : "Redundant comparison of two null values in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
  "title" : "Redundant nullcheck of value known to be non-null",
  "description" : "Redundant nullcheck of {2}, which is known to be non-null in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE",
  "title" : "Redundant nullcheck of value known to be null",
  "description" : "Redundant nullcheck of {2} which is known to be null in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE",
  "title" : "Nullcheck of value previously dereferenced",
  "description" : "Nullcheck of {2.givenClass} at {4.lineNumber} of value previously dereferenced in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RC_REF_COMPARISON",
  "title" : "Suspicious reference comparison",
  "description" : "Suspicious comparison of {2} references in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RC_REF_COMPARISON_BAD_PRACTICE",
  "title" : "Suspicious reference comparison to constant",
  "description" : "Suspicious comparison of a {2} reference to constant in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN",
  "title" : "Suspicious reference comparison of Boolean values",
  "description" : "Suspicious comparison of Boolean references in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "REC_CATCH_EXCEPTION",
  "title" : "Exception is caught when Exception is not thrown",
  "description" : "Exception is caught when Exception is not thrown in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "REDOS",
  "title" : "Regex DOS (ReDOS)",
  "description" : "The regular expression \"{0}\" is vulnerable to a denial of service attack (ReDOS)",
  "parameters" : [ ]
}, {
  "patternId" : "REQUESTDISPATCHER_FILE_DISCLOSURE",
  "title" : "RequestDispatcher File Disclosure",
  "description" : "RequestDispatcher populated with user controlled parameters",
  "parameters" : [ ]
}, {
  "patternId" : "RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION",
  "title" : "Invalid syntax for regular expression",
  "description" : "Invalid syntax for regular expression in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION",
  "title" : "File.separator used for regular expression",
  "description" : "File.separator used for regular expression in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RE_POSSIBLE_UNINTENDED_PATTERN",
  "title" : "\".\" or \"|\" used for regular expression",
  "description" : "\".\" or \"|\" used for regular expression in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RFI_SET_ACCESSIBLE",
  "title" : "Method uses AccessibleObject.setAccessible to modify accessibility of classes",
  "description" : "Method {1} uses AccessibleObject.setAccessible to modify accessibility of classes",
  "parameters" : [ ]
}, {
  "patternId" : "RI_REDUNDANT_INTERFACES",
  "title" : "Class implements same interface as superclass",
  "description" : "Class {0} implements same interface as superclass",
  "parameters" : [ ]
}, {
  "patternId" : "ROOM_REFLECTION_ON_OBJECT_METHODS",
  "title" : "Method uses reflection to call a method available on java.lang.Object",
  "description" : "Method {1} uses reflection to call a method available on java.lang.Object",
  "parameters" : [ ]
}, {
  "patternId" : "RPC_ENABLED_EXTENSIONS",
  "title" : "Enabling extensions in Apache XML RPC server or client.",
  "description" : "It is not safe to enable extensions in Apache XML RPC server or client",
  "parameters" : [ ]
}, {
  "patternId" : "RR_NOT_CHECKED",
  "title" : "Method ignores results of InputStream.read()",
  "description" : "{1} ignores result of {2}",
  "parameters" : [ ]
}, {
  "patternId" : "RSA_KEY_SIZE",
  "title" : "RSA usage with short key",
  "description" : "RSA usage with a short key",
  "parameters" : [ ]
}, {
  "patternId" : "RSA_NO_PADDING",
  "title" : "RSA with no padding is insecure",
  "description" : "Use of RSA cipher without proper padding",
  "parameters" : [ ]
}, {
  "patternId" : "RS_READOBJECT_SYNC",
  "title" : "Class's readObject() method is synchronized",
  "description" : "{0}'s readObject method is synchronized",
  "parameters" : [ ]
}, {
  "patternId" : "RU_INVOKE_RUN",
  "title" : "Invokes run on a thread (did you mean to start it instead?)",
  "description" : "{1} explicitly invokes run on a thread (did you mean to start it instead?)",
  "parameters" : [ ]
}, {
  "patternId" : "RV_01_TO_INT",
  "title" : "Random value from 0 to 1 is coerced to the integer 0",
  "description" : "{1} uses generates a random value from 0 to 1 and then coerces that value to the integer 0",
  "parameters" : [ ]
}, {
  "patternId" : "RV_ABSOLUTE_VALUE_OF_HASHCODE",
  "title" : "Bad attempt to compute absolute value of signed 32-bit hashcode",
  "description" : "Bad attempt to compute absolute value of signed 32-bit hashcode in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_ABSOLUTE_VALUE_OF_RANDOM_INT",
  "title" : "Bad attempt to compute absolute value of signed random integer",
  "description" : "Bad attempt to compute absolute value of signed random integer in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE",
  "title" : "Code checks for specific values returned by compareTo",
  "description" : "Check to see if return value of {2.givenClass} is equal to {3}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_CHECK_FOR_POSITIVE_INDEXOF",
  "title" : "Method checks to see if result of String.indexOf is positive",
  "description" : "{1} checks to see if result of String.indexOf is positive",
  "parameters" : [ ]
}, {
  "patternId" : "RV_DONT_JUST_NULL_CHECK_READLINE",
  "title" : "Method discards result of readLine after checking if it is non-null",
  "description" : "{1} discards result of readLine after checking if it is non-null",
  "parameters" : [ ]
}, {
  "patternId" : "RV_EXCEPTION_NOT_THROWN",
  "title" : "Exception created and dropped rather than thrown",
  "description" : "{2.givenClass} not thrown in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_NEGATING_RESULT_OF_COMPARETO",
  "title" : "Negating the result of compareTo()/compare()",
  "description" : "{1} negates the return value of {2}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_REM_OF_HASHCODE",
  "title" : "Remainder of hashCode could be negative",
  "description" : "Remainder of hashCode could be negative in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_REM_OF_RANDOM_INT",
  "title" : "Remainder of 32-bit signed random integer",
  "description" : "Remainder of 32-bit signed random integer computed in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_RETURN_VALUE_IGNORED",
  "title" : "Method ignores return value",
  "description" : "Return value of {2.givenClass} ignored in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
  "title" : "Method ignores exceptional return value",
  "description" : "Exceptional return value of {2} ignored in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_RETURN_VALUE_IGNORED_INFERRED",
  "title" : "Method ignores return value, is this OK?",
  "description" : "Return value of {2.givenClass} ignored, is this OK in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
  "title" : "Return value of method without side effect is ignored",
  "description" : "Return value of {2.givenClass} ignored, but method has no side effect",
  "parameters" : [ ]
}, {
  "patternId" : "RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED",
  "title" : "Return value of putIfAbsent ignored, value passed to putIfAbsent reused",
  "description" : "Return value of putIfAbsent is ignored, but {4} is reused in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "RpC_REPEATED_CONDITIONAL_TEST",
  "title" : "Repeated conditional tests",
  "description" : "Repeated conditional test in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_APPENDED_STRING",
  "title" : "Method passes appended string to title/label of component",
  "description" : "Method {1} passes appended string to title/label of component",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_NON_ACCESSIBLE_JCOMPONENT",
  "title" : "Class extends JComponent but does not implement Accessible interface",
  "description" : "Class {0} extends JComponent but does not implement Accessible interface",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_NON_TRANSLATABLE_STRING",
  "title" : "Method passes constant string to title/label of component",
  "description" : "Method {1} passes constant string to title/label of component",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_NO_SETLABELFOR",
  "title" : "JLabel doesn't specify what it's labeling",
  "description" : "JLabel in method {1} doesn't specify what it's labeling",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_NO_SETSIZE",
  "title" : "Window sets size manually, and doesn't use pack",
  "description" : "Window {0} sets size manually, and doesn't use pack",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_NULL_LAYOUT",
  "title" : "GUI uses absolute layout",
  "description" : "GUI {0} uses absolute layout",
  "parameters" : [ ]
}, {
  "patternId" : "S508C_SET_COMP_COLOR",
  "title" : "Method explicitly sets the color of a Component",
  "description" : "Method {1} Method explicitly sets the color of a Component",
  "parameters" : [ ]
}, {
  "patternId" : "SACM_STATIC_ARRAY_CREATED_IN_METHOD",
  "title" : "Method creates array using constants",
  "description" : "Method {1} creates array using constants",
  "parameters" : [ ]
}, {
  "patternId" : "SAML_IGNORE_COMMENTS",
  "title" : "Ignoring XML comments in SAML may lead to authentication bypass",
  "description" : "Ignoring XML comments in Security Assertion Markup Language (SAML) may lead to authentication bypass",
  "parameters" : [ ]
}, {
  "patternId" : "SAT_SUSPICIOUS_ARGUMENT_TYPES",
  "title" : "This method invokes a method with parameters that seem incorrect for their intended use",
  "description" : "This method {1} invokes a method with parameters that seem incorrect for their intended use",
  "parameters" : [ ]
}, {
  "patternId" : "SA_FIELD_DOUBLE_ASSIGNMENT",
  "title" : "Double assignment of field",
  "description" : "Double assignment of field {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_FIELD_SELF_ASSIGNMENT",
  "title" : "Self assignment of field",
  "description" : "Self assignment of field {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_FIELD_SELF_COMPARISON",
  "title" : "Self comparison of field with itself",
  "description" : "Self comparison of {2.givenClass} with itself in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_FIELD_SELF_COMPUTATION",
  "title" : "Nonsensical self computation involving a field (e.g., x & x)",
  "description" : "Nonsensical self computation of {2.givenClass} with itself in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_LOCAL_DOUBLE_ASSIGNMENT",
  "title" : "Double assignment of local variable",
  "description" : "Double assignment of {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_LOCAL_SELF_ASSIGNMENT",
  "title" : "Self assignment of local variable",
  "description" : "Self assignment of {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD",
  "title" : "Self assignment of local rather than assignment to field",
  "description" : "Self assignment of {2} rather than assigned to field in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_LOCAL_SELF_COMPARISON",
  "title" : "Self comparison of value with itself",
  "description" : "Self comparison of {2} with itself {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SA_LOCAL_SELF_COMPUTATION",
  "title" : "Nonsensical self computation involving a variable (e.g., x & x)",
  "description" : "Nonsensical self computation of {2} with itself in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SBSC_USE_STRINGBUFFER_CONCATENATION",
  "title" : "Method concatenates strings using + in a loop",
  "description" : "{1} concatenates strings using + in a loop",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_COMMAND_INJECTION",
  "title" : "Potential Command Injection (Scala)",
  "description" : "The command execution could be vulnerable to injection",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_PATH_TRAVERSAL_IN",
  "title" : "Potential Path Traversal using Scala API (file read)",
  "description" : "This Scala API ({3}) reads a file whose location might be specified by user input",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_PLAY_SSRF",
  "title" : "Scala Play Server-Side Request Forgery (SSRF)",
  "description" : "This web server request could be used by an attacker to expose internal services.",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_SENSITIVE_DATA_EXPOSURE",
  "title" : "Potential information leakage in Scala Play",
  "description" : "Configuration or system information leakage found in Scala Play",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_SQL_INJECTION_ANORM",
  "title" : "Potential Scala Anorm Injection",
  "description" : "This use of {3} can be vulnerable to SQL injection (with Anorm)",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_SQL_INJECTION_SLICK",
  "title" : "Potential Scala Slick Injection",
  "description" : "This use of {3} can be vulnerable to SQL injection (with Slick)",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_XSS_MVC_API",
  "title" : "Potential XSS in Scala MVC API engine",
  "description" : "A MVC result with this content-type could be vulnerable to XSS",
  "parameters" : [ ]
}, {
  "patternId" : "SCALA_XSS_TWIRL",
  "title" : "Potential XSS in Scala Twirl template engine",
  "description" : "This use of {3} could be vulnerable to XSS in the Twirl template",
  "parameters" : [ ]
}, {
  "patternId" : "SCA_SUSPICIOUS_CLONE_ALGORITHM",
  "title" : "Clone method stores a new value to member field of source object",
  "description" : "Clone method {1} stores a new value to member field of source object",
  "parameters" : [ ]
}, {
  "patternId" : "SCII_SPOILED_CHILD_INTERFACE_IMPLEMENTOR",
  "title" : "Class implements interface by relying on unknowing superclass methods",
  "description" : "Class {0} implements interface by relying on unknowing superclass methods",
  "parameters" : [ ]
}, {
  "patternId" : "SCI_SYNCHRONIZED_COLLECTION_ITERATORS",
  "title" : "Method creates iterators on synchronized collections",
  "description" : "Method {1} creates iterators on synchronized collections",
  "parameters" : [ ]
}, {
  "patternId" : "SCRIPT_ENGINE_INJECTION",
  "title" : "Potential code injection when using Script Engine",
  "description" : "This use of {3} can be vulnerable to code injection",
  "parameters" : [ ]
}, {
  "patternId" : "SCRV_SUSPICIOUS_COMPARATOR_RETURN_VALUES",
  "title" : "Comparator method doesn't seem to return all ordering values",
  "description" : "Comparator method {1} doesn't seem to return all ordering values",
  "parameters" : [ ]
}, {
  "patternId" : "SCR_SLOPPY_CLASS_REFLECTION",
  "title" : "Method accesses statically bound class with Class.forName",
  "description" : "Method {1} accesses statically bound class with Class.forName",
  "parameters" : [ ]
}, {
  "patternId" : "SCSS_SUSPICIOUS_CLUSTERED_SESSION_SUPPORT",
  "title" : "Method modifies an http session attribute without calling setAttribute",
  "description" : "Method {1} modifies an http session attribute without calling setAttribute",
  "parameters" : [ ]
}, {
  "patternId" : "SC_START_IN_CTOR",
  "title" : "Constructor invokes Thread.start()",
  "description" : "{1} invokes {2}",
  "parameters" : [ ]
}, {
  "patternId" : "SEAM_LOG_INJECTION",
  "title" : "Potential code injection in Seam logging call",
  "description" : "Potential code injection in Seam logging call",
  "parameters" : [ ]
}, {
  "patternId" : "SEC_SIDE_EFFECT_CONSTRUCTOR",
  "title" : "Method uses a Side Effect Constructor",
  "description" : "Method {1} uses a Side Effect Constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SEO_SUBOPTIMAL_EXPRESSION_ORDER",
  "title" : "Method orders expressions in a conditional in a sub optimal way",
  "description" : "Method {1} orders expressions in a conditional in a sub optimal way",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_CONTENT_TYPE",
  "title" : "Untrusted Content-Type header",
  "description" : "The HTTP header Content-Type can be controlled by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_HEADER",
  "title" : "HTTP headers untrusted",
  "description" : "Request header can easily be altered by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_HEADER_REFERER",
  "title" : "Untrusted Referer header",
  "description" : "The header \"Referer\" can easily be spoofed by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_HEADER_USER_AGENT",
  "title" : "Untrusted User-Agent header",
  "description" : "The header \"User-Agent\" can easily be spoofed by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_PARAMETER",
  "title" : "Untrusted servlet parameter",
  "description" : "The method {3} returns a String value that is controlled by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_QUERY_STRING",
  "title" : "Untrusted query string",
  "description" : "The query string can be any value",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_SERVER_NAME",
  "title" : "Untrusted Hostname header",
  "description" : "The hostname received can often be controlled by the client",
  "parameters" : [ ]
}, {
  "patternId" : "SERVLET_SESSION_ID",
  "title" : "Untrusted session cookie value",
  "description" : "Direct access to Session ID should be avoided",
  "parameters" : [ ]
}, {
  "patternId" : "SE_BAD_FIELD",
  "title" : "Non-transient non-serializable instance field in serializable class",
  "description" : "Class {0} defines non-transient non-serializable instance field {1.name}",
  "parameters" : [ ]
}, {
  "patternId" : "SE_BAD_FIELD_INNER_CLASS",
  "title" : "Non-serializable class has a serializable inner class",
  "description" : "{0} is serializable but also an inner class of a non-serializable class",
  "parameters" : [ ]
}, {
  "patternId" : "SE_BAD_FIELD_STORE",
  "title" : "Non-serializable value stored into instance field of a serializable class",
  "description" : "{2} stored into non-transient field {1.givenClass}",
  "parameters" : [ ]
}, {
  "patternId" : "SE_COMPARATOR_SHOULD_BE_SERIALIZABLE",
  "title" : "Comparator doesn't implement Serializable",
  "description" : "{0} implements Comparator but not Serializable",
  "parameters" : [ ]
}, {
  "patternId" : "SE_INNER_CLASS",
  "title" : "Serializable inner class",
  "description" : "{0} is serializable and an inner class",
  "parameters" : [ ]
}, {
  "patternId" : "SE_METHOD_MUST_BE_PRIVATE",
  "title" : "Method must be private in order for serialization to work",
  "description" : "The method {1.givenClass} must be private to be invoked in serialization/deserialization of {0}",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NONFINAL_SERIALVERSIONID",
  "title" : "serialVersionUID isn't final",
  "description" : "{1} isn't final",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NONLONG_SERIALVERSIONID",
  "title" : "serialVersionUID isn't long",
  "description" : "{1} isn't long",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NONSTATIC_SERIALVERSIONID",
  "title" : "serialVersionUID isn't static",
  "description" : "{1} isn't static",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NO_SERIALVERSIONID",
  "title" : "Class is Serializable, but doesn't define serialVersionUID",
  "description" : "{0} is Serializable; consider declaring a serialVersionUID",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NO_SUITABLE_CONSTRUCTOR",
  "title" : "Class is Serializable but its superclass doesn't define a void constructor",
  "description" : "{0} is Serializable but its superclass doesn't define an accessible void constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION",
  "title" : "Class is Externalizable but doesn't define a void constructor",
  "description" : "{0} is Externalizable but doesn't define a void constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SE_PRIVATE_READ_RESOLVE_NOT_INHERITED",
  "title" : "Private readResolve method not inherited by subclasses",
  "description" : "Private readResolve method in {0} not inherited by subclasses.",
  "parameters" : [ ]
}, {
  "patternId" : "SE_READ_RESOLVE_IS_STATIC",
  "title" : "The readResolve method must not be declared as a static method.",
  "description" : "{1} should be declared as an instance method rather than a static method",
  "parameters" : [ ]
}, {
  "patternId" : "SE_READ_RESOLVE_MUST_RETURN_OBJECT",
  "title" : "The readResolve method must be declared with a return type of Object.",
  "description" : "The method {1} must be declared with a return type of Object rather than {1.returnType}",
  "parameters" : [ ]
}, {
  "patternId" : "SE_TRANSIENT_FIELD_NOT_RESTORED",
  "title" : "Transient field that isn't set by deserialization.",
  "description" : "The field {1} is transient but isn't set by deserialization",
  "parameters" : [ ]
}, {
  "patternId" : "SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS",
  "title" : "Transient field of class that isn't Serializable.",
  "description" : "{1.givenClass} is transient but {0} isn't Serializable",
  "parameters" : [ ]
}, {
  "patternId" : "SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH",
  "title" : "Dead store due to switch statement fall through",
  "description" : "Value of {2.givenClass} from previous case is overwritten here due to switch statement fall through",
  "parameters" : [ ]
}, {
  "patternId" : "SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW",
  "title" : "Dead store due to switch statement fall through to throw",
  "description" : "Value of {2.givenClass} from previous case is lost here due to switch statement fall through to throw",
  "parameters" : [ ]
}, {
  "patternId" : "SF_SWITCH_FALLTHROUGH",
  "title" : "Switch statement found where one case falls through to the next case",
  "description" : "Switch statement found in {1} where one case falls through to the next case",
  "parameters" : [ ]
}, {
  "patternId" : "SF_SWITCH_NO_DEFAULT",
  "title" : "Switch statement found where default case is missing",
  "description" : "Switch statement found in {1} where default case is missing",
  "parameters" : [ ]
}, {
  "patternId" : "SGSU_SUSPICIOUS_GETTER_SETTER_USE",
  "title" : "Method uses same bean's getter value for setter",
  "description" : "Method {1} uses same bean's getter value for setter",
  "parameters" : [ ]
}, {
  "patternId" : "SG_SLUGGISH_GUI",
  "title" : "Method performs time consuming operation in GUI thread",
  "description" : "Method {1} performs time consuming operation in GUI thread",
  "parameters" : [ ]
}, {
  "patternId" : "SIC_INNER_SHOULD_BE_STATIC",
  "title" : "Should be a static inner class",
  "description" : "Should {0} be a _static_ inner class?",
  "parameters" : [ ]
}, {
  "patternId" : "SIC_INNER_SHOULD_BE_STATIC_ANON",
  "title" : "Could be refactored into a named static inner class",
  "description" : "The class {0} could be refactored into a named _static_ inner class",
  "parameters" : [ ]
}, {
  "patternId" : "SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS",
  "title" : "Could be refactored into a static inner class",
  "description" : "The class {0} could be refactored into a _static_ inner class",
  "parameters" : [ ]
}, {
  "patternId" : "SIC_THREADLOCAL_DEADLY_EMBRACE",
  "title" : "Deadly embrace of non-static inner class and thread local",
  "description" : "{0} needs to be _static_ to avoid a deadly embrace with {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SIL_SQL_IN_LOOP",
  "title" : "Method executes SQL queries inside of loops",
  "description" : "Method {1} executes SQL queries inside of loops",
  "parameters" : [ ]
}, {
  "patternId" : "SIO_SUPERFLUOUS_INSTANCEOF",
  "title" : "Unnecessary type check done using instanceof operator",
  "description" : "{1} does an unnecessary type check using instanceof operator when it can be determined statically",
  "parameters" : [ ]
}, {
  "patternId" : "SI_INSTANCE_BEFORE_FINALS_ASSIGNED",
  "title" : "Static initializer creates instance before all static final fields assigned",
  "description" : "Static initializer for {0} creates instance before all static final fields assigned",
  "parameters" : [ ]
}, {
  "patternId" : "SJVU_SUSPICIOUS_JDK_VERSION_USE",
  "title" : "Method uses rt.jar class or method that does not exist",
  "description" : "Method {1} uses rt.jar class or method that does not exist for the version the class is compiled for",
  "parameters" : [ ]
}, {
  "patternId" : "SKIPPED_CLASS_TOO_BIG",
  "title" : "Class too big for analysis",
  "description" : "{0} is too big for analysis",
  "parameters" : [ ]
}, {
  "patternId" : "SLS_SUSPICIOUS_LOOP_SEARCH",
  "title" : "This method continues a loop after finding an equality condition",
  "description" : "This method {1} continues a loop after finding an equality condition",
  "parameters" : [ ]
}, {
  "patternId" : "SMII_STATIC_METHOD_INSTANCE_INVOCATION",
  "title" : "Method calls static method on instance reference",
  "description" : "Method {1} calls static method on instance reference",
  "parameters" : [ ]
}, {
  "patternId" : "SMTP_HEADER_INJECTION",
  "title" : "SMTP Header Injection",
  "description" : "Possible injection that can lead to Source spoofing, header override and email body injection.",
  "parameters" : [ ]
}, {
  "patternId" : "SNG_SUSPICIOUS_NULL_FIELD_GUARD",
  "title" : "Method tests a field for not null as guard and reassigns it",
  "description" : "Method {1} tests a field for not null as guard and reassigns it",
  "parameters" : [ ]
}, {
  "patternId" : "SNG_SUSPICIOUS_NULL_LOCAL_GUARD",
  "title" : "Method tests a local variable for not null as guard and reassigns it",
  "description" : "Method {1} tests a local variable for not null as guard and reassigns it",
  "parameters" : [ ]
}, {
  "patternId" : "SPEL_INJECTION",
  "title" : "Potential code injection when using Spring Expression",
  "description" : "This use of {3} could be vulnerable to code injection (Spring Expression)",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_CONVERSION_OF_STRING_LITERAL",
  "title" : "Method converts a String literal",
  "description" : "Method {1} calls {3} on a String Literal",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_DOUBLE_APPENDED_LITERALS",
  "title" : "Method appends two literal strings back to back to a StringBuilder",
  "description" : "Method {1} appends two literal strings back to back to a StringBuilder",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_EMPTY_CASING",
  "title" : "Method passes an empty string to equalsIgnoreCase or compareToIgnoreCase",
  "description" : "Method {1} passes an empty string to equalsIgnoreCase or compareToIgnoreCase",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_EQUALS_ON_ENUM",
  "title" : "Method calls equals on an enum instance",
  "description" : "Method {1} calls equals on an enum instance",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_EQUALS_ON_STRING_BUILDER",
  "title" : "Method calls equals(Object o) on a StringBuilder or StringBuffer",
  "description" : "Method {1} calls equals(Object o) on a StringBuilder or StringBuffer",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_INTERN_ON_CONSTANT",
  "title" : "Method calls intern on a string constant",
  "description" : "Method {1} calls intern on a string constant",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_INVALID_BOOLEAN_NULL_CHECK",
  "title" : "Method uses invalid C++ style null check on Boolean",
  "description" : "Method {1} uses invalid C++ style null check on Boolean",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_INVALID_CALENDAR_COMPARE",
  "title" : "Method passes a non calendar object to Calendar.before or Calendar.after",
  "description" : "Method {1} passes a non calendar object to Calendar.before or Calendar.after",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_NEGATIVE_BITSET_ITEM",
  "title" : "Method passes a negative number as a bit to a BitSet which isn't supported",
  "description" : "Method {1} passes a negative number as a bit to a BitSet which isn't supported",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_NON_ARRAY_PARM",
  "title" : "Method passes a non array object to a parameter that expects an array",
  "description" : "Method {1} passes a non array object to a parameter that expects an array",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_NON_USEFUL_TOSTRING",
  "title" : "Method calls toString() on an instance of a class that hasn't overridden toString()",
  "description" : "Method {1} calls toString() on an instance of a class that hasn't overridden toString()",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_NO_CHAR_SB_CTOR",
  "title" : "Method appears to pass character to StringBuffer or StringBuilder integer constructor",
  "description" : "Method {1} appears to pass character to StringBuffer or StringBuilder integer constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_NULL_BEFORE_INSTANCEOF",
  "title" : "Method checks a reference for null before calling instanceof",
  "description" : "Method {1} checks a reference for null before calling instanceof",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_SERIALVER_SHOULD_BE_PRIVATE",
  "title" : "Class defines a serialVersionUID as non private",
  "description" : "Class {0} defines a serialVersionUID as non private",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_STATIC_FORMAT_STRING",
  "title" : "Method calls String.format on a static (non parameterized) format string",
  "description" : "Method {1} calls String.format on a static (non parameterized) format string",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_STRINGBUFFER_WITH_EMPTY_STRING",
  "title" : "Method passes an empty string to StringBuffer of StringBuilder constructor",
  "description" : "Method {1} passes an empty string to StringBuffer of StringBuilder constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_STRINGBUILDER_IS_MUTABLE",
  "title" : "Method needlessly assigns a StringBuilder to itself, as it's mutable",
  "description" : "Method {1} needlessly assigns a StringBuilder to itself, as it's mutable",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_STUTTERED_ASSIGNMENT",
  "title" : "Method assigns a value to a local twice in a row",
  "description" : "Method {1} assigns a value to a local twice in a row",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_SUSPECT_STRING_TEST",
  "title" : "Method possibly mixes up normal strings and empty strings in branching logic",
  "description" : "Method {1} treats null and normal strings the same, when it should probably\n\t\ttreat null and empty strings the same",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_TEMPORARY_TRIM",
  "title" : "Method trims a String temporarily",
  "description" : "Method {1} trims a String temporarily",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_TOSTRING_ON_STRING",
  "title" : "Method calls toString() on a String",
  "description" : "Method {1} calls toString() on a String",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USELESS_CASING",
  "title" : "Method compares string without case after enforcing a case",
  "description" : "Method {1} compares string without case after enforcing a case",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USELESS_TERNARY",
  "title" : "Method uses a ternary operator to cast a boolean to true or false",
  "description" : "Method {1} uses a ternary operator to cast a boolean to true or false",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_BIGDECIMAL_STRING_CTOR",
  "title" : "Method passes double value to BigDecimal Constructor",
  "description" : "Method {1} passes double value to BigDecimal Constructor",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_CHARAT",
  "title" : "Method fetches character array just to do the equivalent of the charAt method",
  "description" : "Method {1} fetches character array just to do the equivalent of the charAt method",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_GET0",
  "title" : "Method uses iterator().next() on a List to get the first item",
  "description" : "Method {1} uses iterator().next() on a List to get the first item",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_GETPROPERTY",
  "title" : "Method calls getProperties just to get one property, use getProperty instead",
  "description" : "Method {1} calls getProperties just to get one property, use getProperty instead",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_ISEMPTY",
  "title" : "Method checks the size of a collection against zero rather than using isEmpty()",
  "description" : "Method {1} checks the size of a collection against zero rather than using isEmpty()",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_ISNAN",
  "title" : "Method incorrectly compares a floating point number to NaN",
  "description" : "Method {1} compares a {3} to {4}.NaN",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_MATH_CONSTANT",
  "title" : "Method uses non-standard math constant",
  "description" : "Method {1} uses non-standard math constant",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_STRINGBUILDER_LENGTH",
  "title" : "Method converts StringBuffer or Builder to String just to get its length",
  "description" : "Method {1} converts StringBuffer or Builder to String just to get its length",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_USE_ZERO_WITH_COMPARATOR",
  "title" : "Method compares the result of a compareTo method to a value other than zero",
  "description" : "Method {1} compares the result of a compareTo method to a value other than zero",
  "parameters" : [ ]
}, {
  "patternId" : "SPP_WRONG_COMMONS_TO_STRING_OBJECT",
  "title" : "Method does not pass an object to commons-lang's ToStringBuilder",
  "description" : "Method {1} does not pass an object to commons-lang's ToStringBuilder",
  "parameters" : [ ]
}, {
  "patternId" : "SPRING_CSRF_PROTECTION_DISABLED",
  "title" : "Spring CSRF protection disabled",
  "description" : "Disabling Spring Security's CSRF protection is unsafe for standard web applications",
  "parameters" : [ ]
}, {
  "patternId" : "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
  "title" : "Spring CSRF unrestricted RequestMapping",
  "description" : "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
  "parameters" : [ ]
}, {
  "patternId" : "SPRING_ENDPOINT",
  "title" : "Found Spring endpoint",
  "description" : "{0} is a Spring endpoint (Controller)",
  "parameters" : [ ]
}, {
  "patternId" : "SPRING_FILE_DISCLOSURE",
  "title" : "Spring File Disclosure",
  "description" : "ModelAndView populated with user controlled parameters",
  "parameters" : [ ]
}, {
  "patternId" : "SPRING_UNVALIDATED_REDIRECT",
  "title" : "Spring Unvalidated Redirect",
  "description" : "The following redirection could be used by an attacker to redirect users to a phishing website. (in the context of a Spring application)",
  "parameters" : [ ]
}, {
  "patternId" : "SP_SPIN_ON_FIELD",
  "title" : "Method spins on field",
  "description" : "Spinning on {2.givenClass} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_BAD_PREPARED_STATEMENT_ACCESS",
  "title" : "Method attempts to access a prepared statement parameter with index 0",
  "description" : "{1} attempts to access a prepared statement parameter with index 0",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_BAD_RESULTSET_ACCESS",
  "title" : "Method attempts to access a result set field with index 0",
  "description" : "{1} attempts to access a result set field with index 0",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION",
  "title" : "Potential SQL Injection",
  "description" : "This use of {3} can be vulnerable to SQL injection",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_ANDROID",
  "title" : "Potential Android SQL Injection",
  "description" : "This use of {3} can be vulnerable to SQL injection (with Android SQL)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_HIBERNATE",
  "title" : "Potential SQL/HQL Injection (Hibernate)",
  "description" : "This use of {3} can be vulnerable to SQL/HQL injection (with Hibernate)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_JDBC",
  "title" : "Potential JDBC Injection",
  "description" : "This use of {3} can be vulnerable to SQL injection (with JDBC)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_JDO",
  "title" : "Potential SQL/JDOQL Injection (JDO)",
  "description" : "This use of {3} can be vulnerable to SQL/JDOQL injection (with JDO)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_JPA",
  "title" : "Potential SQL/JPQL Injection (JPA)",
  "description" : "This use of {3} can be vulnerable to SQL/JPQL injection (with JPA)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_SPRING_JDBC",
  "title" : "Potential JDBC Injection (Spring JDBC)",
  "description" : "This use of {3} can be vulnerable to SQL injection (with Spring JDBC)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_INJECTION_TURBINE",
  "title" : "Potential SQL Injection with Turbine",
  "description" : "This use of {3} can be vulnerable to SQL injection (with Turbine)",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE",
  "title" : "Nonconstant string passed to execute or addBatch method on an SQL statement",
  "description" : "{1} passes a nonconstant String to an execute or addBatch method on an SQL statement",
  "parameters" : [ ]
}, {
  "patternId" : "SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING",
  "title" : "A prepared statement is generated from a nonconstant String",
  "description" : "A prepared statement is generated from a nonconstant String in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SR_NOT_CHECKED",
  "title" : "Method ignores results of InputStream.skip()",
  "description" : "{1} ignores result of {2}",
  "parameters" : [ ]
}, {
  "patternId" : "SSCU_SUSPICIOUS_SHADED_CLASS_USE",
  "title" : "Method calls a method from a class that has been shaded by a 3rdparty jar",
  "description" : "Method {1} calls a method from a class that has been shaded by a 3rdparty jar",
  "parameters" : [ ]
}, {
  "patternId" : "SSL_CONTEXT",
  "title" : "Weak SSLContext",
  "description" : "SSLContext needs to be compatible with TLS 1.2",
  "parameters" : [ ]
}, {
  "patternId" : "SS_SHOULD_BE_STATIC",
  "title" : "Unread field: should this field be static?",
  "description" : "Unread field: {1}; should this field be static?",
  "parameters" : [ ]
}, {
  "patternId" : "STATIC_IV",
  "title" : "Static IV",
  "description" : "The initialization vector (IV) is not properly generated",
  "parameters" : [ ]
}, {
  "patternId" : "STB_STACKED_TRY_BLOCKS",
  "title" : "Method stacks similar try/catch blocks",
  "description" : "Method {1} stacks similar try/catch blocks",
  "parameters" : [ ]
}, {
  "patternId" : "STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE",
  "title" : "Call to static Calendar",
  "description" : "Call to method of static java.util.Calendar in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE",
  "title" : "Call to static DateFormat",
  "description" : "Call to method of static java.text.DateFormat in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "STCAL_STATIC_CALENDAR_INSTANCE",
  "title" : "Static Calendar field",
  "description" : "{1} is static field of type java.util.Calendar, which isn't thread safe",
  "parameters" : [ ]
}, {
  "patternId" : "STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE",
  "title" : "Static DateFormat",
  "description" : "{1} is a static field of type java.text.DateFormat, which isn't thread safe",
  "parameters" : [ ]
}, {
  "patternId" : "STI_INTERRUPTED_ON_CURRENTTHREAD",
  "title" : "Unneeded use of currentThread() call, to call interrupted()",
  "description" : "{1} makes an unneeded call to currentThread() just to call interrupted()",
  "parameters" : [ ]
}, {
  "patternId" : "STI_INTERRUPTED_ON_UNKNOWNTHREAD",
  "title" : "Static Thread.interrupted() method invoked on thread instance",
  "description" : "{1} invokes static Thread.interrupted() method on thread instance",
  "parameters" : [ ]
}, {
  "patternId" : "STRUTS1_ENDPOINT",
  "title" : "Found Struts 1 endpoint",
  "description" : "{0} is a Struts 1 endpoint (Action)",
  "parameters" : [ ]
}, {
  "patternId" : "STRUTS2_ENDPOINT",
  "title" : "Found Struts 2 endpoint",
  "description" : "{0} is a Struts 2 endpoint",
  "parameters" : [ ]
}, {
  "patternId" : "STRUTS_FILE_DISCLOSURE",
  "title" : "Struts File Disclosure",
  "description" : "ActionForward populated with user controlled parameters",
  "parameters" : [ ]
}, {
  "patternId" : "STRUTS_FORM_VALIDATION",
  "title" : "Struts Form without input validation",
  "description" : "Struts Form with no input validation",
  "parameters" : [ ]
}, {
  "patternId" : "STS_SPURIOUS_THREAD_STATES",
  "title" : "Method calls wait, notify or notifyAll on a Thread instance",
  "description" : "Method {1} calls wait, notify or notifyAll on a Thread instance",
  "parameters" : [ ]
}, {
  "patternId" : "STT_STRING_PARSING_A_FIELD",
  "title" : "This method parses a String that is a field",
  "description" : "This method {1} parses a String that is a field",
  "parameters" : [ ]
}, {
  "patternId" : "STT_TOSTRING_MAP_KEYING",
  "title" : "This method uses a concatenated String as a map key",
  "description" : "This method {1} uses a concatenated String as a map key",
  "parameters" : [ ]
}, {
  "patternId" : "STT_TOSTRING_STORED_IN_FIELD",
  "title" : "This method stores the value of a toString() call into a field",
  "description" : "This method {0} stores the value of a toString() call into a field",
  "parameters" : [ ]
}, {
  "patternId" : "ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD",
  "title" : "Write to static field from instance method",
  "description" : "Write to static field {2} from instance method {1}",
  "parameters" : [ ]
}, {
  "patternId" : "SUA_SUSPICIOUS_UNINITIALIZED_ARRAY",
  "title" : "Method returns an array that appears not to be initialized",
  "description" : "Method {1} returns an array that appears not to be initialized",
  "parameters" : [ ]
}, {
  "patternId" : "SUI_CONTAINS_BEFORE_ADD",
  "title" : "Method checks for an item in a set with contains, before using add()",
  "description" : "Method {1} checks for an item in a set with contains, before using add()",
  "parameters" : [ ]
}, {
  "patternId" : "SUI_CONTAINS_BEFORE_REMOVE",
  "title" : "Method checks for an item in a set with contains, before using remove()",
  "description" : "Method {1} checks for an item in a set with contains, before using remove()",
  "parameters" : [ ]
}, {
  "patternId" : "SWCO_SUSPICIOUS_WAIT_ON_CONCURRENT_OBJECT",
  "title" : "Method calls wait when await was probably intended",
  "description" : "Method {1} calls wait when await was probably intended",
  "parameters" : [ ]
}, {
  "patternId" : "SWL_SLEEP_WITH_LOCK_HELD",
  "title" : "Method calls Thread.sleep() with a lock held",
  "description" : "{1} calls Thread.sleep() with a lock held",
  "parameters" : [ ]
}, {
  "patternId" : "SW_SWING_METHODS_INVOKED_IN_SWING_THREAD",
  "title" : "Certain swing methods needs to be invoked in Swing thread",
  "description" : "Call to swing method in {1} needs to be performed in Swing event thread",
  "parameters" : [ ]
}, {
  "patternId" : "TAPESTRY_ENDPOINT",
  "title" : "Found Tapestry page",
  "description" : "{0} is a Tapestry page",
  "parameters" : [ ]
}, {
  "patternId" : "TBP_TRISTATE_BOOLEAN_PATTERN",
  "title" : "Method returns null for Boolean type",
  "description" : "Method {1} returns null for Boolean type",
  "parameters" : [ ]
}, {
  "patternId" : "TDES_USAGE",
  "title" : "DESede is insecure",
  "description" : "DESede should be replaced with AES",
  "parameters" : [ ]
}, {
  "patternId" : "TEMPLATE_INJECTION_FREEMARKER",
  "title" : "Potential template injection with Freemarker",
  "description" : "Potential template injection with Freemarker template",
  "parameters" : [ ]
}, {
  "patternId" : "TEMPLATE_INJECTION_PEBBLE",
  "title" : "Potential template injection with Pebble",
  "description" : "Potential template injection with Pebble template",
  "parameters" : [ ]
}, {
  "patternId" : "TEMPLATE_INJECTION_VELOCITY",
  "title" : "Potential template injection with Velocity",
  "description" : "Potential template injection with Velocity template",
  "parameters" : [ ]
}, {
  "patternId" : "TESTING",
  "title" : "Testing",
  "description" : "Test warning generated in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TESTING1",
  "title" : "Testing 1",
  "description" : "Test warning 1 generated in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TESTING2",
  "title" : "Testing 2",
  "description" : "Test warning 2 generated in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TESTING3",
  "title" : "Testing 3",
  "description" : "Test warning 3 generated in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TLW_TWO_LOCK_NOTIFY",
  "title" : "Notify with two locks held",
  "description" : "notify() or notifyAll*() with two locks held in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TLW_TWO_LOCK_WAIT",
  "title" : "Wait with two locks held",
  "description" : "wait() with two locks held in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED",
  "title" : "Value annotated as carrying a type qualifier used where a value that must not carry that qualifier is required",
  "description" : "Value annotated as carrying type qualifier {2.simpleName} used where a value that must not carry that qualifier is required",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS",
  "title" : "Comparing values with incompatible type qualifiers",
  "description" : "Value annotated as having the type qualifier {2.simpleName} is compared for equality with a value that never has that qualifier",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK",
  "title" : "Value required to have type qualifier, but marked as unknown",
  "description" : "Value is required to always be {2.simpleName}, but is explicitly annotated as unknown with regards to {2.simpleName}",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK",
  "title" : "Value required to not have type qualifier, but marked as unknown",
  "description" : "Value is required never be {2.simpleName}, but is explicitly annotated as unknown with regards to {2.simpleName}",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK",
  "title" : "Value that might not carry a type qualifier is always used in a way requires that type qualifier",
  "description" : "Value that might not carry the {2.simpleName} annotation is always used in a way that requires that type qualifier",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK",
  "title" : "Value that might carry a type qualifier is always used in a way prohibits it from having that type qualifier",
  "description" : "Value that might carry the {2.simpleName} annotation is always used in a way that prohibits it from having that type qualifier",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED",
  "title" : "Value annotated as never carrying a type qualifier used where value carrying that qualifier is required",
  "description" : "Value annotated as never carrying type qualifier {2.simpleName} used where value carrying that qualifier is required",
  "parameters" : [ ]
}, {
  "patternId" : "TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED",
  "title" : "Value without a type qualifier used where a value is required to have that qualifier",
  "description" : "Value without a type qualifier is used in a place that requires a {2.simpleName} annotation",
  "parameters" : [ ]
}, {
  "patternId" : "TRUST_BOUNDARY_VIOLATION",
  "title" : "Trust Boundary Violation",
  "description" : "The application mixes trusted and untrusted data in session attributes.",
  "parameters" : [ ]
}, {
  "patternId" : "TR_TAIL_RECURSION",
  "title" : "Method employs tail recursion",
  "description" : "Method {1} employs tail recursion",
  "parameters" : [ ]
}, {
  "patternId" : "UAA_USE_ADD_ALL",
  "title" : "Method uses simple loop to copy contents of one collection to another",
  "description" : "Method {1} uses simple loop to copy contents of one collection to another",
  "parameters" : [ ]
}, {
  "patternId" : "UAC_UNNECESSARY_API_CONVERSION_DATE_TO_INSTANT",
  "title" : "Method constructs a Date object, merely to convert it to an Instant object",
  "description" : "Method {1} constructs a Date object, merely to convert it to an Instant object",
  "parameters" : [ ]
}, {
  "patternId" : "UAC_UNNECESSARY_API_CONVERSION_FILE_TO_PATH",
  "title" : "Method constructs a File object, merely to convert it to a Path object",
  "description" : "Method {1} constructs a File object, merely to convert it to a Path object",
  "parameters" : [ ]
}, {
  "patternId" : "UCC_UNRELATED_COLLECTION_CONTENTS",
  "title" : "Method adds unrelated types to collection or array",
  "description" : "Method {1} adds unrelated types to collection or array",
  "parameters" : [ ]
}, {
  "patternId" : "UCF_USELESS_CONTROL_FLOW",
  "title" : "Useless control flow",
  "description" : "Useless control flow in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UCF_USELESS_CONTROL_FLOW_NEXT_LINE",
  "title" : "Useless control flow to next line",
  "description" : "Useless control flow to next line in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UCPM_USE_CHARACTER_PARAMETERIZED_METHOD",
  "title" : "Method passes constant String of length 1 to character overridden method",
  "description" : "Method {1} passes constant String of length 1 to character overridden method",
  "parameters" : [ ]
}, {
  "patternId" : "UC_USELESS_CONDITION",
  "title" : "Condition has no effect",
  "description" : "Useless condition: it's known that {2} at this point",
  "parameters" : [ ]
}, {
  "patternId" : "UC_USELESS_CONDITION_TYPE",
  "title" : "Condition has no effect due to the variable type",
  "description" : "Useless condition: it's always {2} because variable type is {3}",
  "parameters" : [ ]
}, {
  "patternId" : "UC_USELESS_OBJECT",
  "title" : "Useless object created",
  "description" : "Useless object stored in variable {2} of method {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UC_USELESS_OBJECT_STACK",
  "title" : "Useless object created on stack",
  "description" : "Useless object created in method {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UC_USELESS_VOID_METHOD",
  "title" : "Useless non-empty void method",
  "description" : "Method {1} seems to be useless",
  "parameters" : [ ]
}, {
  "patternId" : "UEC_USE_ENUM_COLLECTIONS",
  "title" : "Class uses an ordinary set or map with an enum class as the key",
  "description" : "Class {0} uses an ordinary set or map with an enum class as the key",
  "parameters" : [ ]
}, {
  "patternId" : "UG_SYNC_SET_UNSYNC_GET",
  "title" : "Unsynchronized get method, synchronized set method",
  "description" : "{1} is unsynchronized, {2} is synchronized",
  "parameters" : [ ]
}, {
  "patternId" : "UI_INHERITANCE_UNSAFE_GETRESOURCE",
  "title" : "Usage of GetResource may be unsafe if class is extended",
  "description" : "Usage of GetResource in {1} may be unsafe if class is extended",
  "parameters" : [ ]
}, {
  "patternId" : "UJM_UNJITABLE_METHOD",
  "title" : "This method is too long to be compiled by the JIT",
  "description" : "This method {1} is too long to be compiled by the JIT",
  "parameters" : [ ]
}, {
  "patternId" : "UL_UNRELEASED_LOCK",
  "title" : "Method does not release lock on all paths",
  "description" : "{1} does not release lock on all paths",
  "parameters" : [ ]
}, {
  "patternId" : "UL_UNRELEASED_LOCK_EXCEPTION_PATH",
  "title" : "Method does not release lock on all exception paths",
  "description" : "{1} does not release lock on all exception paths",
  "parameters" : [ ]
}, {
  "patternId" : "UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS",
  "title" : "Uncallable method defined in anonymous class",
  "description" : "Uncallable method {1} defined in anonymous class",
  "parameters" : [ ]
}, {
  "patternId" : "UMTP_UNBOUND_METHOD_TEMPLATE_PARAMETER",
  "title" : "Method declares unbound method template parameter(s)",
  "description" : "Method {1} declares unbound method template parameter(s)",
  "parameters" : [ ]
}, {
  "patternId" : "UM_UNNECESSARY_MATH",
  "title" : "Method calls static Math class method on a constant value",
  "description" : "Method calls static Math class method on a constant value",
  "parameters" : [ ]
}, {
  "patternId" : "UNENCRYPTED_SERVER_SOCKET",
  "title" : "Unencrypted Server Socket",
  "description" : "Unencrypted server socket (instead of SSLServerSocket)",
  "parameters" : [ ]
}, {
  "patternId" : "UNENCRYPTED_SOCKET",
  "title" : "Unencrypted Socket",
  "description" : "Unencrypted socket to {0} (instead of SSLSocket)",
  "parameters" : [ ]
}, {
  "patternId" : "UNKNOWN",
  "title" : "Unknown bug pattern",
  "description" : "Unknown bug pattern BUG_PATTERN in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UNNC_UNNECESSARY_NEW_NULL_CHECK",
  "title" : "Method checks the result of a new allocation",
  "description" : "Method {1} checks the result of a new allocation",
  "parameters" : [ ]
}, {
  "patternId" : "UNSAFE_HASH_EQUALS",
  "title" : "Unsafe hash equals",
  "description" : "Unsafe comparison of hash that are susceptible to timing attack",
  "parameters" : [ ]
}, {
  "patternId" : "UNVALIDATED_REDIRECT",
  "title" : "Unvalidated Redirect",
  "description" : "The following redirection could be used by an attacker to redirect users to a phishing website.",
  "parameters" : [ ]
}, {
  "patternId" : "UPM_UNCALLED_PRIVATE_METHOD",
  "title" : "Private method is never called",
  "description" : "Private method {1} is never called",
  "parameters" : [ ]
}, {
  "patternId" : "UP_UNUSED_PARAMETER",
  "title" : "Static or private method has unused parameters",
  "description" : "Static or private method {1} has unused parameters",
  "parameters" : [ ]
}, {
  "patternId" : "URF_UNREAD_FIELD",
  "title" : "Unread field",
  "description" : "Unread field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
  "title" : "Unread public/protected field",
  "description" : "Unread public/protected field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "URLCONNECTION_SSRF_FD",
  "title" : "URLConnection Server-Side Request Forgery (SSRF) and File Disclosure",
  "description" : "This web server request could be used by an attacker to expose internal services and filesystem.",
  "parameters" : [ ]
}, {
  "patternId" : "URL_REWRITING",
  "title" : "URL rewriting method",
  "description" : "Method rewriting session ID into the URL",
  "parameters" : [ ]
}, {
  "patternId" : "URV_CHANGE_RETURN_TYPE",
  "title" : "Method returns more specific type of object than declared",
  "description" : "Method {1} returns more specific type of object than declared",
  "parameters" : [ ]
}, {
  "patternId" : "URV_INHERITED_METHOD_WITH_RELATED_TYPES",
  "title" : "Inherited method returns more specific type of object than declared",
  "description" : "Inherited method {1} returns more specific type of object than declared",
  "parameters" : [ ]
}, {
  "patternId" : "URV_UNRELATED_RETURN_VALUES",
  "title" : "Method returns different types of unrelated Objects",
  "description" : "Method {1} returns different types of unrelated Objects",
  "parameters" : [ ]
}, {
  "patternId" : "UR_UNINIT_READ",
  "title" : "Uninitialized read of field in constructor",
  "description" : "Uninitialized read of {2.name} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR",
  "title" : "Uninitialized read of field method called from constructor of superclass",
  "description" : "{2.name} isn't initialized in {1} when invoked from constructor for superclass",
  "parameters" : [ ]
}, {
  "patternId" : "USBR_UNNECESSARY_STORE_BEFORE_RETURN",
  "title" : "Method stores return result in local before immediately returning it",
  "description" : "Method {1} stores return result in local before immediately returning it",
  "parameters" : [ ]
}, {
  "patternId" : "USFW_UNSYNCHRONIZED_SINGLETON_FIELD_WRITES",
  "title" : "Method of Singleton class writes to a field in an unsynchronized manner",
  "description" : "Method {1} of Singleton class writes to a field in an unsynchronized manner",
  "parameters" : [ ]
}, {
  "patternId" : "USM_USELESS_ABSTRACT_METHOD",
  "title" : "Abstract Method is already defined in implemented interface",
  "description" : "Abstract Method {1} is already defined in implemented interface",
  "parameters" : [ ]
}, {
  "patternId" : "USM_USELESS_SUBCLASS_METHOD",
  "title" : "Method superfluously delegates to parent class method",
  "description" : "{1} superfluously delegates to parent class method",
  "parameters" : [ ]
}, {
  "patternId" : "USS_USE_STRING_SPLIT",
  "title" : "Method builds String array using String Tokenizing",
  "description" : "Method {1} builds String array using String Tokenizing",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_ACTUAL_CONSTANT",
  "title" : "JUnit test method passes constant to second (actual) assertion parameter",
  "description" : "JUnit test method {1} passes constant to second (actual) assertion parameter",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_ASSERT_USED",
  "title" : "JUnit test method uses Java asserts rather than a JUnit assertion",
  "description" : "JUnit test method {1} uses Java asserts rather than a JUnit assertion",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_BOOLEAN_ASSERT",
  "title" : "JUnit test method asserts that a value is equal to true or false",
  "description" : "JUnit test method {1} asserts that a value is equal to true or false",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_IMPOSSIBLE_NULL",
  "title" : "JUnit test method asserts that an autoboxed value is not null",
  "description" : "JUnit test method {1} asserts that an autoboxed value is not null",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_INEXACT_DOUBLE",
  "title" : "JUnit test method asserts that two doubles are exactly equal",
  "description" : "JUnit test method {1} asserts that two doubles are exactly equal",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_NO_ASSERT",
  "title" : "JUnit test method appears to have no assertions",
  "description" : "JUnit test method {1} appears to have no assertions",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_USE_ASSERT_EQUALS",
  "title" : "JUnit test method passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "description" : "JUnit test method {1} passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_USE_ASSERT_NOT_EQUALS",
  "title" : "JUnit test method passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "description" : "JUnit test method {1} passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_USE_ASSERT_NOT_NULL",
  "title" : "JUnit test method passes null Assert.assertNotEquals",
  "description" : "JUnit test method {1} passes null to Assert.assertNotEquals",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_USE_ASSERT_NULL",
  "title" : "JUnit test method passes null Assert.assertEquals",
  "description" : "JUnit test method {1} passes null to Assert.assertEquals",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_JUNIT_ASSERTION_ODDITIES_USING_DEPRECATED",
  "title" : "JUnit 4 test using deprecated junit.framework.* classes",
  "description" : "JUnit 4 test {1} using deprecated junit.framework.* classes",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_ACTUAL_CONSTANT",
  "title" : "TestNG test method passes constant to first (actual) assertion parameter",
  "description" : "TestNG test method {1} passes constant to first (actual) assertion parameter",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_ASSERT_USED",
  "title" : "TestNG test method uses Java asserts rather than a TestNG assertion",
  "description" : "TestNG test method {1} uses Java asserts rather than a TestNG assertion",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_BOOLEAN_ASSERT",
  "title" : "TestNG test method asserts that a value is true or false",
  "description" : "TestNG test method {1} asserts that a value is true or false",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_IMPOSSIBLE_NULL",
  "title" : "TestNG test method asserts that an autoboxed value is not null",
  "description" : "TestNG test method {1} asserts that an autoboxed value is not null",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_INEXACT_DOUBLE",
  "title" : "TestNG test method asserts that two doubles are exactly equal",
  "description" : "TestNG test method {1} asserts that two doubles are exactly equal",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_NO_ASSERT",
  "title" : "TestNG test method appears to have no assertions",
  "description" : "TestNG test method {1} appears to have no assertions",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_USE_ASSERT_EQUALS",
  "title" : "TestNG test method passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "description" : "TestNG test method {1} passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_USE_ASSERT_NOT_EQUALS",
  "title" : "TestNG test method passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "description" : "TestNG test method {1} passes boolean expression to Assert.assertFalse / Assert.assertTrue",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_USE_ASSERT_NOT_NULL",
  "title" : "TestNG test method passes null Assert.assertNotEquals",
  "description" : "TestNG test method {1} passes null to Assert.assertNotEquals",
  "parameters" : [ ]
}, {
  "patternId" : "UTAO_TESTNG_ASSERTION_ODDITIES_USE_ASSERT_NULL",
  "title" : "TestNG test method passes null Assert.assertEquals",
  "description" : "TestNG test method {1} passes null to Assert.assertEquals",
  "parameters" : [ ]
}, {
  "patternId" : "UTA_USE_TO_ARRAY",
  "title" : "Method manually creates array from collection",
  "description" : "Method {1} manually creates array from collection",
  "parameters" : [ ]
}, {
  "patternId" : "UTWR_USE_TRY_WITH_RESOURCES",
  "title" : "Method manually handles closing an auto-closeable resource",
  "description" : "Method {1} manually handles closing an auto-closeable resource",
  "parameters" : [ ]
}, {
  "patternId" : "UUF_UNUSED_FIELD",
  "title" : "Unused field",
  "description" : "Unused field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD",
  "title" : "Unused public or protected field",
  "description" : "Unused public or protected field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UVA_USE_VAR_ARGS",
  "title" : "Method defines parameter list with array as last argument, rather than vararg",
  "description" : "Method {1} defines parameter list with array as last argument, rather than vararg",
  "parameters" : [ ]
}, {
  "patternId" : "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
  "title" : "Field not initialized in constructor but dereferenced without null check",
  "description" : "{1.givenClass} not initialized in constructor and dereferenced in {2}",
  "parameters" : [ ]
}, {
  "patternId" : "UWF_NULL_FIELD",
  "title" : "Field only ever set to null",
  "description" : "Field only ever set to null: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UWF_UNWRITTEN_FIELD",
  "title" : "Unwritten field",
  "description" : "Unwritten field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
  "title" : "Unwritten public or protected field",
  "description" : "Unwritten public or protected field: {1}",
  "parameters" : [ ]
}, {
  "patternId" : "UW_UNCOND_WAIT",
  "title" : "Unconditional wait",
  "description" : "Unconditional wait in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "VA_FORMAT_STRING_USES_NEWLINE",
  "title" : "Format string should use %n rather than \\n",
  "description" : "Format string should use %n rather than \\n in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG",
  "title" : "Primitive array passed to function expecting a variable number of object arguments",
  "description" : "{2} passed to varargs method {3} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "VO_VOLATILE_INCREMENT",
  "title" : "An increment to a volatile field isn't atomic",
  "description" : "Increment of volatile field {2} in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "VO_VOLATILE_REFERENCE_TO_ARRAY",
  "title" : "A volatile reference to an array doesn't treat the array elements as volatile",
  "description" : "{1} is a volatile reference to an array; the array elements are non-volatile",
  "parameters" : [ ]
}, {
  "patternId" : "VR_UNRESOLVABLE_REFERENCE",
  "title" : "Class makes reference to unresolvable class or method",
  "description" : "Unresolvable reference to {1} by {0}",
  "parameters" : [ ]
}, {
  "patternId" : "WA_AWAIT_NOT_IN_LOOP",
  "title" : "Condition.await() not in loop",
  "description" : "Condition.await() not in loop in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "WA_NOT_IN_LOOP",
  "title" : "Wait not in loop",
  "description" : "Wait not in loop in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "WEAK_FILENAMEUTILS",
  "title" : "FilenameUtils not filtering null bytes",
  "description" : "FilenameUtils.{3} doesn't filter null bytes",
  "parameters" : [ ]
}, {
  "patternId" : "WEAK_HOSTNAME_VERIFIER",
  "title" : "HostnameVerifier that accept any signed certificates",
  "description" : "HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack",
  "parameters" : [ ]
}, {
  "patternId" : "WEAK_MESSAGE_DIGEST_MD5",
  "title" : "MD2, MD4 and MD5 are weak hash functions",
  "description" : "This API {3} (MDX) is not a recommended cryptographic hash function",
  "parameters" : [ ]
}, {
  "patternId" : "WEAK_MESSAGE_DIGEST_SHA1",
  "title" : "SHA-1 is a weak hash function",
  "description" : "This API {3} (SHA-1) is not a recommended cryptographic hash function",
  "parameters" : [ ]
}, {
  "patternId" : "WEAK_TRUST_MANAGER",
  "title" : "TrustManager that accept any certificates",
  "description" : "TrustManager that accept any certificates makes communication vulnerable to a MITM attack",
  "parameters" : [ ]
}, {
  "patternId" : "WEM_OBSCURING_EXCEPTION",
  "title" : "Method throws a java.lang.Exception that wraps a more useful exception",
  "description" : "Method {1} throws a java.lang.Exception that wraps a more useful exception",
  "parameters" : [ ]
}, {
  "patternId" : "WEM_WEAK_EXCEPTION_MESSAGING",
  "title" : "Method throws exception with static message string",
  "description" : "Method {1} throws exception with static message string",
  "parameters" : [ ]
}, {
  "patternId" : "WICKET_ENDPOINT",
  "title" : "Found Wicket WebPage",
  "description" : "{0} is a Wicket WebPage",
  "parameters" : [ ]
}, {
  "patternId" : "WICKET_XSS1",
  "title" : "Disabling HTML escaping put the application at risk for XSS",
  "description" : "Disabling HTML escaping put the application at risk for XSS",
  "parameters" : [ ]
}, {
  "patternId" : "WI_DUPLICATE_WIRED_TYPES",
  "title" : "Class auto wires the same object into two separate fields in a class hierarchy",
  "description" : "Class {0} auto wires the same object into two separate fields in a class hierarchy",
  "parameters" : [ ]
}, {
  "patternId" : "WI_MANUALLY_ALLOCATING_AN_AUTOWIRED_BEAN",
  "title" : "Method allocates an object with new when the class is defined as an autowireable bean",
  "description" : "Method {1} allocates an object with new when the class is defined as an autowireable bean",
  "parameters" : [ ]
}, {
  "patternId" : "WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL",
  "title" : "Synchronization on getClass rather than class literal",
  "description" : "Synchronization on getClass rather than class literal in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "WMI_WRONG_MAP_ITERATOR",
  "title" : "Inefficient use of keySet iterator instead of entrySet iterator",
  "description" : "{1} makes inefficient use of keySet iterator instead of entrySet iterator",
  "parameters" : [ ]
}, {
  "patternId" : "WOC_WRITE_ONLY_COLLECTION_FIELD",
  "title" : "Class creates and initializes a collection but never reads or gains information from it",
  "description" : "Class {0} creates and initializes a collection but never reads or gains information from it",
  "parameters" : [ ]
}, {
  "patternId" : "WOC_WRITE_ONLY_COLLECTION_LOCAL",
  "title" : "Method creates and initializes a collection but never reads or gains information from it",
  "description" : "Method {1} creates and initializes a collection but never reads or gains information from it",
  "parameters" : [ ]
}, {
  "patternId" : "WS_WRITEOBJECT_SYNC",
  "title" : "Class's writeObject() method is synchronized but nothing else is",
  "description" : "{0}'s writeObject method is synchronized but nothing else is",
  "parameters" : [ ]
}, {
  "patternId" : "XFB_XML_FACTORY_BYPASS",
  "title" : "Method directly allocates a specific implementation of xml interfaces",
  "description" : "{1} directly allocates a specific implementation of xml interfaces",
  "parameters" : [ ]
}, {
  "patternId" : "XML_DECODER",
  "title" : "XMLDecoder usage",
  "description" : "It is not safe to use an XMLDecoder to parse user supplied data",
  "parameters" : [ ]
}, {
  "patternId" : "XPATH_INJECTION",
  "title" : "Potential XPath Injection",
  "description" : "This use of {3} can be vulnerable to XPath Injection",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_JSP_PRINT",
  "title" : "Potential XSS in JSP",
  "description" : "Potential XSS in JSP",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_REQUEST_PARAMETER_TO_JSP_WRITER",
  "title" : "JSP reflected cross site scripting vulnerability",
  "description" : "HTTP parameter directly written to JSP output, giving reflected XSS vulnerability in {1.class}",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_REQUEST_PARAMETER_TO_SEND_ERROR",
  "title" : "Servlet reflected cross site scripting vulnerability in error page",
  "description" : "HTTP parameter written to Servlet error page in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER",
  "title" : "Servlet reflected cross site scripting vulnerability",
  "description" : "HTTP parameter written to Servlet output in {1}",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_REQUEST_WRAPPER",
  "title" : "XSSRequestWrapper is a weak XSS protection",
  "description" : "XSSRequestWrapper is a weak XSS protection mechanism",
  "parameters" : [ ]
}, {
  "patternId" : "XSS_SERVLET",
  "title" : "Potential XSS in Servlet",
  "description" : "This use of {3} could be vulnerable to XSS in the Servlet",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_DOCUMENT",
  "title" : "XML parsing vulnerable to XXE (DocumentBuilder)",
  "description" : "The use of {3} (DocumentBuilder) is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_DTD_TRANSFORM_FACTORY",
  "title" : "XML parsing vulnerable to XXE (TransformerFactory)",
  "description" : "The use of {3} (TransformerFactory) is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_SAXPARSER",
  "title" : "XML parsing vulnerable to XXE (SAXParser)",
  "description" : "The use of {3} (SAXParser) is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_XMLREADER",
  "title" : "XML parsing vulnerable to XXE (XMLReader)",
  "description" : "The use of {3} (XMLReader) is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_XMLSTREAMREADER",
  "title" : "XML parsing vulnerable to XXE (XMLStreamReader)",
  "description" : "The XML parsing is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_XPATH",
  "title" : "XML parsing vulnerable to XXE (XPathExpression)",
  "description" : "The use of {3} (XPath API) is vulnerable to XML External Entity attacks",
  "parameters" : [ ]
}, {
  "patternId" : "XXE_XSLT_TRANSFORM_FACTORY",
  "title" : "XSLT parsing vulnerable to XXE (TransformerFactory)",
  "description" : "The use of {3} is vulnerable to XSLT External Entity attacks",
  "parameters" : [ ]
} ]