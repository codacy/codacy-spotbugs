version: 2.1

orbs:
  codacy: codacy/base@0.1.0

references:

  default_sbt_job: &default_sbt_job
    machine: true
    working_directory: ~/workdir
    environment:
      JAVA_OPTS: -Xmx3200m
      AWS_REGION: eu-west-1

  restore_sbt_cache: &restore_sbt_cache
    restore_cache:
      keys:
        - sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
        - sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}
        - sbt-cache-{{ .Branch }}
        - sbt-cache

  clean_sbt_cache: &clean_sbt_cache
    run:
      name: CleanCache
      command: |
        find $HOME/.sbt -name "*.lock" | xargs rm | true
        find $HOME/.ivy2 -name "ivydata-*.properties" | xargs rm | true

  save_sbt_cache: &save_sbt_cache
    save_cache:
      key: sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
      paths:
        - "~/.ivy2"
        - "~/.m2"
        - "~/.sbt"
        - "~/codacy-plugins-test/target"
        - "~/codacy-plugins-test/project/target"
        - "~/codacy-plugins-test/project/project"
        - "~/workdir/target"
        - "~/workdir/project/target"
        - "~/workdir/project/project"

jobs:
  checkout_and_version:
    docker:
      - image: codacy/git-version:latest
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: Set version
          command: /bin/git-version > .version
      - run:
          name: Set Sbt version
          command: echo "version in ThisBuild := \"$(cat .version)\"" > version.sbt
      - run:
          name: Current version
          command: cat .version
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/*

  compile_test_publish:
    <<: *default_sbt_job
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Clone test project
          working_directory: ~/
          command: |
            (git -C ~/codacy-plugins-test fetch --all &&
              git -C ~/codacy-plugins-test reset --hard origin/master) ||
                (rm -rf ~/codacy-plugins-test &&
                  git clone git://github.com/codacy/codacy-plugins-test.git ~/codacy-plugins-test)
      - run:
          name: Check formatting
          command: sbt ";scalafmt::test;test:scalafmt::test;sbt:scalafmt::test"
      - run:
          name: Compile and Test
          command: sbt ";compile;test:compile;test"
      - run:
          name: Compile test project
          working_directory: ~/codacy-plugins-test
          command: sbt compile
      - run:
          name: Publish tool docker locally
          working_directory: ~/workdir
          command: docker build --no-cache -t codacy/codacy-spotbugs:latest .
      - *clean_sbt_cache
      - *save_sbt_cache
      - run:
          name: Validate json
          working_directory: ~/codacy-plugins-test
          command: sbt -Dcodacy.tests.ignore.descriptions=true "runMain codacy.plugins.DockerTest json codacy/$CIRCLE_PROJECT_REPONAME:latest"
      - run:
          name: Test patterns
          working_directory: ~/codacy-plugins-test
          command: sbt -Dcodacy.tests.noremove=true -Dcodacy.tests.threads=8 "runMain codacy.plugins.DockerTest pattern codacy/$CIRCLE_PROJECT_REPONAME:latest"
      - deploy:
          name: Push image to docker registry
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag codacy/$CIRCLE_PROJECT_REPONAME:latest codacy/$CIRCLE_PROJECT_REPONAME:$(cat .version)
              docker push codacy/$CIRCLE_PROJECT_REPONAME:$(cat .version)
              docker push codacy/$CIRCLE_PROJECT_REPONAME:latest
            fi
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: Tag version on git provider
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git tag $(cat .version) && git push --tags
            fi


workflows:
  version: 2
  build:
    jobs:
      - checkout_and_version
      - compile_test_publish:
          context: CodacyDocker
          requires:
            - checkout_and_version
      - codacy/tag_version:
          name: tag_version
          requires:
            - compile_test_publish
          filters:
            branches:
              only:
                - master
